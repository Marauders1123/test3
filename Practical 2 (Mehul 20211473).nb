(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    317467,       6344]
NotebookOptionsPosition[    311448,       6250]
NotebookOutlinePosition[    311851,       6266]
CellTagsIndexPosition[    311808,       6263]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Practical 2
Mehul Pant | BSc(H) Computer Science | 20211473
\
\>", "Title",
 CellChangeTimes->{{3.8744706122215805`*^9, 3.8744706415895443`*^9}, {
  3.8744707261415586`*^9, 3.874470729420238*^9}, {3.8786177447711363`*^9, 
  3.878617750305668*^9}, {3.879246458559181*^9, 
  3.8792464655567765`*^9}},ExpressionUUID->"9c2ecbc1-e9ff-4667-b790-\
50dbbb469cdb"],

Cell[CellGroupData[{

Cell[TextData[{
 "Plotting of second order solution family of differential equation \n",
 StyleBox["\tQues 1. Solve Second order Differential Equation y\
\[CloseCurlyQuote]\[CloseCurlyQuote]+y=0\n\tSolution: \n\t ", "Subsection"]
}], "Section",
 CellChangeTimes->{{3.8744707495012903`*^9, 3.8744708509881897`*^9}, {
  3.874471289005066*^9, 
  3.8744712896482067`*^9}},ExpressionUUID->"79233050-2241-4764-8afe-\
94ba47d3271c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
     RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8744708585835943`*^9, 
  3.8744708911669273`*^9}},ExpressionUUID->"13d5f5c0-f9f3-4230-8498-\
9ad290ee026a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], "+", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.874470893836382*^9},ExpressionUUID->"8af913b4-4121-4cf7-a7b1-\
3b30cec6bdce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Ques 2. Solve Second order Differential Equation y\
\[CloseCurlyQuote]\[CloseCurlyQuote]+ y\[CloseCurlyQuote] -6y=0\nSolution:", \
"Subsection"]], "Subsubsection",
 CellChangeTimes->{{3.874470900905571*^9, 3.87447098524909*^9}, {
  3.8744712662214293`*^9, 
  3.8744712756454005`*^9}},ExpressionUUID->"d1f1319c-efe0-4713-997e-\
1df84ecca47b"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.874470739764368*^9, 
  3.874470740717591*^9}},ExpressionUUID->"a5662274-641a-416d-b971-\
d5a3bcae3853"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
     RowBox[{
      RowBox[{"y", "'"}], "[", "x", "]"}], "-", 
     RowBox[{"6", 
      RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.874470988105974*^9, 3.8744710156156483`*^9}, {
  3.874471050238044*^9, 
  3.8744710505739093`*^9}},ExpressionUUID->"f56837fc-8bb5-461d-936c-\
2a85a8d579b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "x"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8744710169150653`*^9, 
  3.874471052271326*^9},ExpressionUUID->"d5baad6e-4958-4d0b-a01c-\
422a5df66819"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "Ques", " ", "3.", " ", "Solve", " ", "Second", " ", "order", " ", 
       "Differential", " ", "Equation", " ", "4", 
       RowBox[{"y", "''"}]}], "+", 
      RowBox[{"12", 
       RowBox[{"y", "'"}]}], "-", 
      RowBox[{"6", "y"}]}], "=", "0"}], "\n", 
    RowBox[{"Solution", ":"}]}], "Subsubsection"]}]], "Input",
 CellChangeTimes->{{3.874471057672901*^9, 3.8744711010384836`*^9}, {
  3.874471219165948*^9, 
  3.8744712195022583`*^9}},ExpressionUUID->"f786a608-6301-4523-b6d8-\
838acd610288"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"4", 
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
     RowBox[{"12", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], "-", 
     RowBox[{"6", 
      RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.87447110489108*^9, 
  3.874471147407792*^9}},ExpressionUUID->"c0074457-5874-4ab4-86ad-\
75839c47d826"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["3", "2"]}], "-", 
          FractionBox[
           SqrtBox["15"], "2"]}], ")"}], " ", "x"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["3", "2"]}], "+", 
          FractionBox[
           SqrtBox["15"], "2"]}], ")"}], " ", "x"}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8744711296374187`*^9, 
  3.8744711486284747`*^9}},ExpressionUUID->"65578497-0073-44be-ac84-\
675ba5dc247a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "Ques", " ", "4.", " ", "Solve", " ", "Second", " ", "order", " ", 
       "Differential", " ", "Equation", " ", 
       RowBox[{"y", "''"}]}], "-", 
      RowBox[{"2", 
       RowBox[{"y", "'"}]}], "+", "y"}], "=", "0"}], "\n", 
    RowBox[{"Solution", ":", "\[IndentingNewLine]"}]}], 
   "Subsection"]}]], "Input",
 CellChangeTimes->{{3.874471156239336*^9, 3.874471182493437*^9}, {
  3.8744712215489607`*^9, 
  3.87447122187022*^9}},ExpressionUUID->"b9da07a9-de53-42dd-a92d-\
14053f473ef5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
     RowBox[{"2", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
     RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8744711871871*^9, 
  3.8744712093435807`*^9}},ExpressionUUID->"6534a31a-1984-4228-b18e-\
7ac8d3ea0450"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", "x", " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8744712106728106`*^9},ExpressionUUID->"af192286-6c57-48a8-9cab-\
1f1e73be2820"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "Ques", " ", "5.", " ", "Solve", " ", "Second", " ", "order", " ", 
       "Differential", " ", "Equation", " ", 
       RowBox[{"y", "''"}]}], "-", 
      RowBox[{"6", 
       RowBox[{"y", "'"}]}], "+", 
      RowBox[{"13", "y"}]}], "=", "0"}], "\n", 
    RowBox[{"Solution", ":"}]}], "Subsection"]}]], "Input",
 CellChangeTimes->{{3.8744712249489326`*^9, 3.8744712593099155`*^9}, {
  3.874471298765971*^9, 
  3.874471307645949*^9}},ExpressionUUID->"b3020f3d-c099-4ef2-8452-\
49d8d7e16356"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
     RowBox[{"6", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
     RowBox[{"13", 
      RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8744713130787992`*^9, 
  3.874471335631471*^9}},ExpressionUUID->"c83ad20b-833a-41fc-8eeb-\
485a4fda1438"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"3", " ", "x"}]], " ", 
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"3", " ", "x"}]], " ", 
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8744713378366256`*^9},ExpressionUUID->"030ab410-a76b-4019-9ade-\
b99888e7c820"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   StyleBox[
    RowBox[{
    "Plotting", " ", "of", " ", "second", " ", "order", " ", "solution", " ", 
     "family", " ", "of", " ", "differential", " ", "equation"}], "Section"], 
   StyleBox["\[IndentingNewLine]", "Section"], 
   StyleBox["\[IndentingNewLine]", "Section"], 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{
      "Ques", " ", "1.", " ", "Solve", " ", "Second", " ", "order", " ", 
       "differential", " ", "equation", " ", 
       RowBox[{"y", "''"}]}], "+", "y"}], "=", 
     RowBox[{
     "0", " ", "and", " ", "plot", " ", "its", " ", "three", " ", 
      "Solutions"}]}], "Subsection"], 
   StyleBox["\[IndentingNewLine]", "Subsection"], 
   StyleBox[
    RowBox[{"Solution", ":", "\[IndentingNewLine]"}], 
    "Subsection"]}]}]], "Input",
 CellChangeTimes->{{3.8744713573103304`*^9, 
  3.874471437133709*^9}},ExpressionUUID->"f54f4cce-3b69-4ae5-93a8-\
2862760d1331"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
      RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "2"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "5"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol3", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", 
      RowBox[{"-", "4"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Sol1", ",", "Sol2", ",", "Sol3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Purple", ",", 
         RowBox[{"Thickness", "[", "0.02", "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Sol1", ",", "Sol2", ",", "Sol3"}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8744714422611074`*^9, 3.8744715689109526`*^9}, {
  3.8744715990874405`*^9, 3.874471635101536*^9}, {3.8744716652928853`*^9, 
  3.8744719015726957`*^9}},ExpressionUUID->"9f0ee3f2-06e0-4184-8774-\
e719b2b87b03"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], "+", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8744719039302197`*^9},ExpressionUUID->"981457ad-92d3-417a-b985-\
0dfb81a8fee5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "x", "]"}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.8744719039313946`*^9},ExpressionUUID->"1bbd4084-9b95-48c8-bfb3-\
53fb5875eab6"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Cos", "[", "x", "]"}], "2"], "+", 
  RowBox[{"5", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.8744719039324255`*^9},ExpressionUUID->"77d6a853-11be-4f77-ad47-\
8f073c13d1ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Cos", "[", "x", "]"}]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{"Sin", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.874471903934422*^9},ExpressionUUID->"c61f35dd-61c3-4d33-8f10-\
a1c1cfb1a1fc"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
D70T8Oz8ewypyjCcTNSYw6OP7NYVf40hhQYho01Oc7hwOoemWDrpN291Rb8H
c/hx6/1/3RMxJC5kxDFcM4cnCBg0cJD+5Tvj9Y1QmccVkcSdPQEY4uIML1J3
nMfdzrsd7fLEEPu7hCdP7s7jI148TFUnyXliNaevzM3jTta7ZO8ZYWg1o3vf
L4UF/OvPjmw/XdJ3FlOq1scWcK6af/vfymFoPElsTqN8Abcf+LNXiRFDv41o
nUlTC7h/y8TkmWkKGhozKWWXXcS3JmSZrvZTUJe+T/jIzUX842zilGYxBdW2
1fOnHF7C39NXcjqcKagiqH+JI3wJ9y+7bPr7AAWVysz1BhQu4aknsik2uhSU
7y314qjYMv7ViX75MCMFPeX027r51zJe4cugUaSzgSe+uy0SJLSCH295IjG1
Sscf2T9bHzVbwZ9NSu+Zr6Tj0Zmfa6pzV/DayOnN5w/ScX9jWZtg/1X8il/q
f9ZH1nGr4Ga/vxzruOidiD+Kaqv4QdkR+2O71vH8ayo1JkMruGnj6q4673X8
Q9JCrP3jFXyXsCLr8/Z1nGnrqXRP+jKuWnD1sf1TOl7+I+BZDCzhDH4CvS4i
FKR5QVrrlhDZp1NZrcXkOUTHHU79LpzH8/fjDZyWFARJgRqmR+dxZ6lzhQUR
FFTNaxYse3cOr6wvjWWaoyAbVoutsDiDXxdz2ZtOOnsW5z11Yvc/nKkiP/fn
dUZE2/pR98joIH48e98LvaeMiMnh9frQ3ABeENf75HYJIxps2ZaTKdSPu7iz
3NKZZkSW/wl5qB3rxmv47E9fP8GEUu8EGgQ2teIRrpiw7HZmFCvUHjSUnYOz
clqGOU+yIE/ewOPHvnYTdor2sI2NFZlMMHzSeNlLZO1x2WCXY0XxYSJMlUH9
hEWA/9V3x1iRVYZ8nhvPD+LRSGoAUw0runnkKaPcm2FCoWL64ssnm5DMelBE
aOlfwr93NS+wcBOiXs+7JJQwTjQuMk9ZtGxCZma54HlpgvDSEPVaZGFDcfiV
eVXFf0Thkz3upj5sqKXLw27ZcJrY6/fAecyUHRW7XJrcc36OeHQv+Vn5aXY0
NGxwz/LrHDGakzF4P4Qd5e3ZpXxJa56I/vnxxM4CdmTHfY42/m+eaLMcto+W
4kCz1hcrVU4vEgqekwmndnCgwYWjoz5li4T/zaVO3aMcCDxGufIElwjxck7b
vigOJHrM/eNyzRLhorrVWmOBA3UHK1WdFFohCk3w+ww8nKjbrrpp+OwKscnZ
rKVDlROpfL3dhj6sEDnxjof+c+JEQnvflV6wWSXmmCMONH/mRHekRs+bXVsj
rg92GPk834yiG6fkJJLpRP+HA+f9SzejlyKfFC520IkdD+BRSPtmxK4+7vWY
a4OY2pv1J4qVC4XnCphaBW0QJ7Kv3n3uwYX2Db2ZlZUl/RM+U/wqnAs9PGu6
f2UHBQROuA29SeZCLp57vtGsKPCZ+/DW0q9cSPPV13kIocAOP7meNp0tiDVJ
XNG0mQKPDiUw9ZhvQQ0Ke2O5f1JgWolL48eZLcjfjkbokHkxs2cxdOLxFlSe
0Jp7UwgDpveeWbN5W5D3+wypIkUyb8b8+LbcsAU9dL1TuEsPA8HdnxRY1rag
gGmtdesjGOhvpipFsHOjkO6TsYNOGIwEdBuwCXGjd7bR3FVeGDwceXg4WpYb
hbenb6wEYrDH+pDrFi1uZP1MfORmBAZTBFvQfQNupBM0ZXXuHgYpatV3Bcy4
UfrvrJ4UMk8vM2//IObMjQZvdRcx5WLw0mf2S4oXN5paNbfVJd10ZOD1kHQQ
N3Kxz8gqLMOAwfzsYvpNbhRHuXj2djUGecUynEoPuZHo228H8xsxOCHfR81O
5UbvZVMkVZsx4Lj/eKvGa25kZmXyYp70TzH98P63H8j9h//N5+kiveTBeVK3
lhtdELOT+o/0D39nrW9RKzfiFGFsMBwg875xWOSOAW5k5M4Td5D0ivfbncll
f7kRMW5z4f+ekZBceIuWuFGwru3+U6R3GqPyaquYeFDxFhOp02Ttv+jeY8LD
g4IbWCcLyesVXOSnGiR40HMVWpkDuV5b8wDTQRUeFLSdNfEw+bxrhokizdt4
0GRRSHw8uR+trCMa1kY8aNepnd+0yP32C24x6jjEg1wGYzxE2zG4fb3B9thx
HsT+8Mqto+R59aeue/ae5UEG6ykOQ2Q/Ro7vCjt5mQf1r9oKVZD9etiwFDcU
xoNGq5KWpsl+7tn2LutMDA+Kv8+55zLZ76m088RoIg+KlfljcICcR8oWpTaP
DB4kMsC3/RLpIfPgodHJdzwosoP9ztT/5zeatH4ReBCT5684IOf78qgt7/xn
HpRab1k0TM7/SCWPon8XD5LnjHZwDCLn9STCMmSGBwmtai4cdMbgE1/E7y0U
XpR063F6ojW539s3Qp5t5kVbndpmpYwxEA8Oz6lW4kUydJrJdxkM9OauG9ls
40XPMw7Vs/OQHvS83v3biBdlqKr+CaBTIPL4tU0cJ3nRotV5V67vpHfawp4m
efKihFmPyK2VFCg3D9umEciLOFiM257kUGDOINTlcBwvEm2xalP+jwKnJELg
8SdetDeGvfKsGAWC4q7aKnfxormIP7tfUsjvbfPVyZIRXpRm+NHQtnGD+Lwe
JN6P8aFKGmurvN0God8f4C+nz4fQp6qcKWc6wf30stbbdD7UgF1eKiHdpyp0
uW5PPh8qbxeRvzq+SpjcvXSijeBDRNN2BvrTVSL4P9/oxW4+1L4okmzGuEqM
nrw4asjDjx5bDQl6flwmgHo+tfEqP7r599cnpfkFoifeU+/4bX5UK1zzLvbx
ArHA7dk0Ec+Pcsp+vpjTXyDUMI817gJ+ZO82XVjhP0/E/zhrZzvGj+RMY93G
xmeJC2ku3MM2Asiz/2SPW/YUEROQkBRzmqy1tSW+m0wRuZZNStu9BdBG9b8j
JlX/iEm63u6YWwJIcOcOniqVScLTgcNHv1QAFUhLPPv6d4xw58//Fi0tiOQv
PAt3MhwmXCM2Hm0dF0T+vE3M2a4NRISjruzgkiAKxkKR70AN8VL33JsoZiEU
ia8rn7KtJH4NtdYNSAqhUxMl5zyiCgkX/OXSrcNCaPB++Fqg6GPcecncvr9Q
CIWLMDBwKXzFT7gnStwME0Zx7HkDfSm/8NUutqbpO8Lo3JvoLC2fETzeLCDk
eKIwWlsbUM02/o23KNkN0N4Jo/KJuleLI6O48W+BZ73DwiiQt3eIlzqOK7vc
k9M2FUGXVw33NmpM47XfKO1JR0SQHw+T+eDdadzZyPsGq5MIsnCVEDk4NY0n
yRwa6Q0QQeM2hpHib2Zwrh+cmTezRdB5qP2oITeHzzlGqvZxiSKqZX+B0J8F
PPbLYs8+MVGkYalRO2+4iKsbukXnK4oivPnS0Oy9RdxV3GTiJhJFu97xPTXS
W8K7uhnfaPuIouD3itXdfsu4337fk8khoiip6r8Y5+plnLdkaMum26Ko/vEU
1wz3Cm6eUOHd91wUpQ1kFIhnrODltv9pR7aLouGqFAOrulXcoW5yaOaHKBIk
tlEbONfIXH7igeOkKLqlnF9CO7yG0wQN57RZxdDM2M+WLx1reHrbyvs+fTEU
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
3O0gPQ==
          "]]}, Annotation[#, "Charting`Private`Tag$3899#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$3899#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Thickness[0.02]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$3899#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-20, 20}, {-5.024937810504335, 5.024937304379345}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"2", " ", 
           RowBox[{"sin", "(", "x", ")"}]}], "+", 
         RowBox[{"cos", "(", "x", ")"}]}], 
       RowBox[{
         RowBox[{"5", " ", 
           RowBox[{"sin", "(", "x", ")"}]}], "+", 
         FractionBox[
          RowBox[{"cos", "(", "x", ")"}], "2"]}], 
       RowBox[{
         RowBox[{"-", 
           RowBox[{"4", " ", 
             RowBox[{"sin", "(", "x", ")"}]}]}], "-", 
         RowBox[{
           RowBox[{"cos", "(", "x", ")"}]}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[0.36]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[0.36]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.5, 0, 0.5]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.02`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8744719042716*^9},ExpressionUUID->"9e37f4fd-c74d-4904-822b-8e040105b3bd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "Ques", " ", "2.", " ", "Solve", " ", "Second", " ", "order", " ", 
       "differential", " ", "equation", " ", 
       RowBox[{"y", "''"}]}], "+", 
      RowBox[{"y", "'"}], "-", 
      RowBox[{"6", "y"}]}], " ", "=", 
     RowBox[{
     "0", "and", " ", "plot", " ", "its", " ", "three", " ", "Solutions"}]}], 
    "\[IndentingNewLine]", 
    RowBox[{"Solution", ":"}]}], "Subsection"]}]], "Input",
 CellChangeTimes->{{3.8744719170403414`*^9, 3.8744719357258053`*^9}, {
  3.8744722450530005`*^9, 
  3.874472257581633*^9}},ExpressionUUID->"72cf425f-54a4-42fe-a934-\
6f6c352b82a5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}], "-", 
      RowBox[{"6", 
       RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "2.5"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "5"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol3", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}]}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "5"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Sol1", ",", "Sol2", ",", "Sol3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Pink", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", 
        RowBox[{"Thickness", "[", "0.02", "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Sol1", ",", "Sol2", ",", "Sol3"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8744719475769405`*^9, 
  3.8744722345287504`*^9}},ExpressionUUID->"4999c429-5fb8-4e37-ab65-\
2411d03b60da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "x"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8744722253423567`*^9, 
  3.8744722354867234`*^9}},ExpressionUUID->"d19c7ea0-655b-4672-abfa-\
26b1b986b502"],

Cell[BoxData[
 RowBox[{"2.5`", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", "x"}]]}]], "Output",
 CellChangeTimes->{{3.8744722253423567`*^9, 
  3.8744722354886456`*^9}},ExpressionUUID->"e86f2256-e59f-40ba-b0bf-\
a335ab64d673"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "3"}], " ", "x"}]], "+", 
  RowBox[{"5", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "x"}]]}]}]], "Output",
 CellChangeTimes->{{3.8744722253423567`*^9, 
  3.874472235489678*^9}},ExpressionUUID->"67636a70-5e79-4272-aebd-\
f73dea7e556e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "3"}], " ", "x"}]]}], "+", 
  RowBox[{"5", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", "x"}]]}]}]], "Output",
 CellChangeTimes->{{3.8744722253423567`*^9, 
  3.874472235490716*^9}},ExpressionUUID->"d83d1ee1-2b32-45ee-bd0d-\
2d5e1986b69c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0.5], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1:eJwtlGs01HkchzXTbC65025ltK4rVAi13b6/FFGNzaxCLvMfu4s1bomM7Oqm
g01ppVLarYwyloZCyOUXkcuptUmNy5QYRMIYRmNW8986Z198zvPmefG8+pgE
RzN/oqioqDA+7TPXwrJ3JEniI9NESNGhAoieN0ubV5C40e/O45+PF0Bpmb3l
jIzEwSF5EfaZBeBgxQgeGSfx75avboiKC2CDbkrvEyGJGU6NnrzRAkDi6fYr
JSRmxvdOzLH5wEx9WrSeReL4XFfOgH8hJHSkRIbWK/HQ+aN3TKKKoKtL410D
+yNuqQjRKnYpBfrDaIMNRgs4j6qyo1u7DCo4TTTtVwpcR+kJbXK7D0SGvaTn
5DxObo+L0Wc/AHlWUhoGOdY+aGtgLK4Hntbr5TkDc7iGX1hXy2yEa7vtY5+n
y7De7AW6RnEznIxgc1d7zGKuxhpmhG8bJFH/SoidkOJMRmbKMrW/gX28w/wl
fxr/OB6b0ZfzDC7WDedcC5dgxYGIVZbnuuBBv9XSYtNJfHNb+AeudzeY6SAX
7z/HcXwYUy0jUQT3rNPCB8WjuEhW/Ths8A30N9/92tl5BGf+GnlWb04Mw7YX
HfB9MXaW3nl0bP9b0E0udF67aAALaekVfN442DpP2d6aEeHTO3MNstdJ4NTO
iX+quUI8FF1DyXKaAUNvwXm/Lzsx87Sblbx6Du7NNWu3mrfjCkH6deolBdzq
Gz47llKPHVN3EZWnSAj0Mirv+yEfHwxQWC/mUlC1etKLxngeVHXoS1nZNOQ0
uMj4hC+GLGsvsjRDDZlJauY3NbYB40LquZVjmsiD1/PU07cTMrOSk/PqdJEr
Q48qqxCC8c3WqgaFAcpkCY/bVYrAO2K6S5n6FWrxpGvu0xuAQVD1e6JDRxMm
hsmdV8Xg6UVfmveFCYqPs2FnLhsBvcjL7PhBMyQU6TBDWkeBv7ts0DHtG0Qk
bnm7ZO843Of4Sran26BHNht+e0SbhOBTO+PXf2+HLNVqR/PdJZBUGkdgs/WI
XstxpaVNw+Qr1pr8IGekoqAUxg5KIcYoeo9+8ib0wasuqNliFvwpayTvaYD6
HFkrLVJkcHQ49shQqAuK8dHRNRXNgb6NY39hsytanj3ku5guB+nK8gXDBA8k
8L9RMMOdh18SQy22r/VEPluPubfWKcBt78ZQ4xIvdDco0nTTwr8wcklKVPG9
kVx9B7V6/0ewclI/mhPni5jPNjvTc5QQU2UhnbgegNQ3azTU/qGEbj/Nl/rl
Aaghv3dPAE8Jl6MiR3e1BiA7biI7V6CE7w6fedgrCUBaqyozljcroUPB9Sl2
CURtEQ5iQ6kSDg9vWaQ6FoiQ6urzWntJSAnTaxtDLCQ/JF8h8CKhfW46cOwA
C5X0tdxi+JDwjlMeJY9gIeOSkJqMYBImx06sc73CQgv780fUE0mwM2Cwr0pZ
qJK3auuS2yQkDTTlGnsTKEpzquV2EQkjpoK+aywCWSbUM93uksBJPONgxiFQ
9u7AsNO1n3yjic3uJwkUO331AvU5CR3uVYGzpQSy9g835nWTIDiYJSurJdBA
07eFLq9JmGoI6kxqJdC+nO76E2MkbBStiDV/QyBVCt/DZOpTr+wBor0nEOYk
dD2cJWHFRgFn8gOBjrxwYxEKEqjmQnk/lY3+/y/YxjKa7NFmo/8ArpNvtQ==

          "]]}, Annotation[#, "Charting`Private`Tag$4168#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
Af+R3JdPSpvwz4U1RYEyEljKfuLYlNaE3NS6tckSEkQfz4lwe9mEFtmLvuVI
Ah6VrPAbDk1YxOT5710BCcj6aSHGHE14xPhQPEsOCbKEAvLV6JqwZ2amyy6L
BLqrV0ekZhpxJ29+dWsGCfyj+OSYKhrRef1LRX0qCYSdNqyWsxpx+q3kD4sU
EpSpdAcMRTUiW7ak058kEmyMh/fn327E5c1ZsaaJJHhT4LT9g3UjWv8roPB+
IIFc0FnpsLONGDVhKT31ngTO0oz/2Qk14u9tM5sy40iwa9tohiFbI86xJ2a9
f0frR0dJl8pGAxbXvBlNiCXBmKe7BE9bA9qPS3+tiybBI10jI8ZvDTgbOW20
FEUCioDMw8XUBizzY70sQvPXpd0pA68a0Cj1eNfVtyQwqZxurXnSgNQ89s/Z
kSRYeV39L8+pAR/vMFzeQXO4Q6Loe7MGFErJDbv5hgRS8OT8s9MNyK+26j/4
mgR1bNaenjINGMY70W5Os92o0ofrfA2oxWV1e/wVCRjzuBsvMDdg7Ec5ay+a
NclzS4/m61GvyfAFheYn+UmnL1bVo+3+1N31L0lQbHH57dF39Xgo9nCtH81r
W3nndrrV446ffeW6NB9NalcdPVePr9e+rQjQ7Kjz7OVX0XqMMJk0p6M5cVFz
8vnmehxfurUy/YIEQ6+2gmNnHaYLuX8do5mHKApTz6xDk9SDqb9pNhi585PX
rw6Lkj9/W6M5xE9KYcWyDo/HGK+x0+5XJTERVC9Xh12W+roEzVtb4oc+sNah
D/tC8S2aiXvmsvfHa/G4nJ9GDs1uvJz+RsU0+zgPb6K9X05pY6/ky1o0pN8T
ZEzz9LUAqe03a/HoWptqEc0iLGpPBk/V4quRI1sP0/pnnb3R8WV/LRa4xVUm
0xxplCceulKDcfGpQUdp/WeNO9hy8kMNHpWq3m1Lm4+mxqgwt3cN3pXeXclO
m+fjqSj3BYMafPHvgnM9zdRjbALx22ow0eP188u0fBzprb7t0VeNLfHMjMox
JLB/+KRKP7carTxsrERpeRqsoTrR21TjehJj4T5a/nics8p7Fatxo4T+s2g8
rV8c9ly55GoM/afzVJmW1yqr/mKb8irUkQz4Ek7Lc9Zy+a5KwSqc8gyrqqSd
h6Ckd9+UVn9gnQTXeb00Wj7MvV0/1dL89Vzar3QSCH6X6353+weaaT6pU84m
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
          "]]}, Annotation[#, "Charting`Private`Tag$4168#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Thickness[0.02]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$4168#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2, 2}, {-110.16615421297979`, 183.89510944660492`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"2.5`", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "x"}]]}], 
       RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
            RowBox[{"-", "3"}], " ", "x"}]], "+", 
         RowBox[{"5", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "x"}]]}]}], 
       RowBox[{
         RowBox[{"5", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "x"}]]}], "-", 
         RowBox[{
           RowBox[{
             FractionBox["1", "2"]}], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{"-", "3"}], " ", "x"}]]}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.36]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Thickness[0.36]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.5, 0.5]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.5, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.02`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8744722253423567`*^9, 
  3.874472235546839*^9}},ExpressionUUID->"e3897c85-bb17-4e26-8271-\
0cf4ecd18788"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[IndentingNewLine]", 
    RowBox[{
     StyleBox[
      RowBox[{
       RowBox[{
        RowBox[{
        "Ques", " ", "3.", " ", "Solve", " ", "Second", " ", "order", " ", 
         "differential", " ", "equation", "  ", "4", 
         RowBox[{"y", "''"}]}], "+", 
        RowBox[{"12", 
         RowBox[{"y", "'"}]}], "+", 
        RowBox[{"9", "y"}]}], "=", 
       RowBox[{
       "0", "and", " ", "plot", " ", "its", " ", "four", " ", "Solutions"}]}],
       "Subsection"], 
     StyleBox["\[IndentingNewLine]", "Subsection"], 
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox[
         RowBox[{"(", "i", ")"}], "Subsection"], 
        StyleBox[" ", "Section"], 
        StyleBox[
         RowBox[{"C", "[", "1", "]"}], "Subsection"]}], 
       StyleBox["=", "Subsection"], 
       StyleBox[
        RowBox[{"-", "1"}], "Subsection"]}], 
      StyleBox[",", "Subsection"], 
      StyleBox[
       RowBox[{
        RowBox[{"C", "[", "2", "]"}], "=", "4"}], "Subsection"]}], 
     StyleBox["\[IndentingNewLine]", "Subsection"], 
     StyleBox[
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", "ii", ")"}], " ", 
         RowBox[{"C", "[", "1", "]"}]}], "=", "3"}], ",", 
       RowBox[{
        RowBox[{"C", "[", "2", "]"}], "=", "6"}]}], "Subsection"], 
     StyleBox["\[IndentingNewLine]", "Section"], 
     StyleBox[
      RowBox[{
       RowBox[{"(", "iii", ")"}], 
       RowBox[{
        StyleBox["c", "Section"], 
        StyleBox["[", "Subsection"]}], "1"}], "Subsection"]}], 
    StyleBox["]", "Subsection"]}], 
   StyleBox["=", "Subsection"], 
   StyleBox[
    RowBox[{"-", "10"}], "Subsection"]}], 
  StyleBox[",", "Subsection"], 
  StyleBox[
   RowBox[{
    RowBox[{"C", "[", "2", "]"}], "=", "7"}], 
   "Subsection"]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"    ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", "iv", ")"}], 
      RowBox[{"C", "[", "1", "]"}]}], "=", 
     RowBox[{"-", "1.5"}]}], ",", 
    RowBox[{
     RowBox[{"C", "[", "2", "]"}], "=", 
     RowBox[{"-", "5"}]}]}]}], "Subsection"], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"Solution", ":", "\[IndentingNewLine]"}], "Subsection"]}], "Input",
 CellChangeTimes->{{3.874472251853979*^9, 3.8744724674853935`*^9}, {
   3.8744725229101443`*^9, 3.874472526043666*^9}, {3.8744726148783646`*^9, 
   3.8744726175496473`*^9}, {3.874472654126933*^9, 3.874472665295562*^9}, 
   3.8744729868443594`*^9},ExpressionUUID->"5aa88d50-f469-4966-a553-\
a898169f65cb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"4", 
       RowBox[{
        RowBox[{"y", "''"}], "[", "x", "]"}]}], "+", 
      RowBox[{"12", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
      RowBox[{"9", 
       RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "4"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "3"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "6"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol3", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", "10"}]}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "7"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol4", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", "1.5"}]}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", 
      RowBox[{"-", "5"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Sol1", ",", "Sol2", ",", "Sol3", ",", "Sol4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", 
        RowBox[{"Thickness", "[", "0.02", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Yellow", ",", 
        RowBox[{"Thickness", "[", "0.03", "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Sol1", ",", "Sol2", ",", "Sol3", ",", "Sol4"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8744725426872163`*^9, 3.8744725545746064`*^9}, {
   3.874472669902544*^9, 3.8744728866403985`*^9}, {3.8744729243850455`*^9, 
   3.874472925440365*^9}, 
   3.8744729845897465`*^9},ExpressionUUID->"219d4a50-eeb0-46bb-ace2-\
c729016a7ffe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]], " ", "x", " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.874472765769617*^9, 3.8744727992740393`*^9, {3.874472888032011*^9, 
   3.8744729261574125`*^9}, 
   3.874472990765542*^9},ExpressionUUID->"ccce50c5-0cd0-4efd-b6ca-\
a3a46fc906ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]], " ", "x"}]}]], "Output",
 CellChangeTimes->{
  3.874472765769617*^9, 3.8744727992740393`*^9, {3.874472888032011*^9, 
   3.8744729261574125`*^9}, 
   3.874472990770556*^9},ExpressionUUID->"e37769de-44b4-494a-a444-\
c79d6f934a1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"3", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]]}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]], " ", "x"}]}]], "Output",
 CellChangeTimes->{
  3.874472765769617*^9, 3.8744727992740393`*^9, {3.874472888032011*^9, 
   3.8744729261574125`*^9}, 
   3.8744729907725515`*^9},ExpressionUUID->"d272e899-59d9-4cd7-9e28-\
04390331498c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "10"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]]}], "+", 
  RowBox[{"7", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]], " ", "x"}]}]], "Output",
 CellChangeTimes->{
  3.874472765769617*^9, 3.8744727992740393`*^9, {3.874472888032011*^9, 
   3.8744729261574125`*^9}, 
   3.874472990774183*^9},ExpressionUUID->"42fdccb5-477d-4967-a1eb-\
21016c311c8d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1.5`"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]]}], "-", 
  RowBox[{"5", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]], " ", "x"}]}]], "Output",
 CellChangeTimes->{
  3.874472765769617*^9, 3.8744727992740393`*^9, {3.874472888032011*^9, 
   3.8744729261574125`*^9}, 
   3.874472990777169*^9},ExpressionUUID->"5e15a281-4c64-49f1-b02e-\
5748fa5ce87c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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
PLW+vg6/78e2LRuQ4H/3v156
          "]]}, Annotation[#, "Charting`Private`Tag$5056#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwV13k0Vt33AHDzc5OQKBVCiURJJRL7JFFCkkLKVKTIqyJEpoavUpLwqlco
kilTZAjnmud5nmXqScjsMf/u76+7Pmudc9e5++yz97lilv/oW7EwMTFdYWZi
+v/n/4omqoZuLeNP1xQ4X/cYkhm2xew8PUv47ipNcMP0JdL85aHJDp9FHL+2
qAzTF0hGoJsvBgYWPa40WBKiQ/4SKhjVOM7AMF+/J+GRDtkaw6FTe4SBlccq
TD7d0CG/5bzZ3LOPgfdlxTwsldch7Qe+vF/awsC1AjsPD9Vpk4OHmhOP0hcw
e7+tme0mbbK2XqYhIWABL2bJRBsFa5FR3L3bQ3/O43AhhZrTrZpkoAnQlLrn
seVX80+pBZqkT2zkbEfrPD4Rn75b5qsmaal2vW5n9TyOn4lh03miSYo/oD+J
+D6PI79HHlU5rEl+6pn+G+M3j7/LO26te6tBRibSSjOOzuO4Za2tLmanyTCt
Q/eans/hB1+NvP6InCL3bNSqrH8yh9kgXGyA+xSZUGUpXus5hxNdt70fXFMj
c7SDGsud5nCB7tZ5jj41skN3QT7fYg6fOqrwsTZCjdx6MW8mVmkOR1+mEVd3
q5GvTc46efyexTKb41dPyp8kfewsXPadncWzv7wcf3Spkr3+pmE5p2Yxl0gE
upWvSh5PNSHPqc7ixSuaIzIfVcnpuUuE/WFqvlnC4zlrVdLCUys0TXgWv7y0
Yv9iRoVEgYezlKdn8PTXjze/86qQa5nsDJ3/ZvBul1fZ364ok26s8c73xqfx
E3qHpaa0Imn/zpTDnD6NBzISnN9vUSQtD24J1hmcxkJEftTqyjFSy8Q9Tapj
Gq9cXRacrTtGCn7THe8tnsbSBX5XIx8cI9MtZyzPhU3jjI3HvMdLFciJghO6
e85R7zcsBYH7R0kLr7o9rbFTWPD4BpOnC/Lk5Y4I1Z6oKSwymLR/akie1JJ3
MBoKn8ICDRdkbzfKk0eGeF9OB03hgfKXnx5/lSeJM/oz3N7UfKlG+4s35Mkk
npYCTeMp/L5yr71Z8yFyObzTNHvDFJb1UFyZzJMjg/OGQ8NuT+Kj9iKCgbdl
SVOX9x7HrCbxWMrOZ4NnZEmpw+dvNJpN4oQBXrfzkrJkTmzWQeLSJJZK3576
YEiG7H3rV3ofJvE091d9JnMZUvL2oVkt/kl8x7E/e9JkP3lPdil82u0vnnwo
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
XKqYGlW7uwjKWEy/V1LO56U5ezgWge7fgyKmowTKWUk1bw0rAkVGGH8E5e/0
q1oHSopAu+WTaifltGbakWfjRTB+/utHnj8ESiLThHsFiiHm2p5TQDk+8RpN
QbUYQsXtpG5Rjgklpl5ZF0PXzNDlV5Q/PfnWOexfDCPGf5oSKEc4mBarZBbD
DF97dDHlsKsbkoL7isFcgKmujXLomfR/x2klsCkw3XCYctARM+/TciVQMq+m
Pk45QJTT9oNRCbyZnH33l/JLrgyDOa8SELbnNR2j7MswU9WJo+Z/agsepPxk
iFPqc0MJXGV/rtFC2as+Y/PqYglkGJs5FVB2zzVfNhAvheKEN5KxlF1iNw4n
apWC/6WLls8pOwZ9r2W7Xwp1TM3SVpQdvCyyrv5XCifi4JkyZTs7rk/pRaUw
FJ7vykXZxijTj2usFJx9nTjbqfjdULd0usFfBu+snqqEU7aQ22SWe6IMDrzZ
KGhG2VQo6wy/VRnEFolF7KB8hbgub/eqDM4L9LbVU/ul35/FLtRbBko3Xt+T
paxbff3vfY5yaHwa3ttE7b9WFndH1QHKW3x5nSirBdxIdPMsB+2zCx1fqPxR
decJafpSDj/tH7opUT5uk+O5v74cQpib5kuo/JNHvBe7RCvA1bjdv47K192T
PxaPF1aAS6xS7Wcqv91rTj2ZHa+Ay2vzw8yUW+OruJO2V4K37+wuowECvbDq
2i12txI+bLy2ZYY6T5OdSzo00SrguhkYNdjz/+vzaSfPVYHVJzHXzZSjgzmv
P3SugiDeuo9K3QQy1NvhMl5bBVF179hcO6n8LFH61PSoGuxveWSmU+dfMKpA
5lVcNVjlJ9dkUPXhntfZTI2WamhuSbFObSaQhLJxdbZMDaxrRCmGNlL5kOIy
H9FVA5WS9et7aql4/pepZadUB3mDUVKomEDpLtAiYVUHR9757h6j6hn35TKz
voA6CNA7shpYQKAC3jZHfXodLPmqXW/IJxD/KbfzYefqodF8KnhzNtV/st67
+izVQ0OYgFV0ItVPvvSqmvE2wHJB7wBTAoGag8XZTuxtgPC76yFGcVQ9uh/v
P3ehAUREQjIXPxNoQDYnyiauAeqTDOxZIwh0NqqjRteoEd7OXNRQCqDi9zTJ
uuROI4RYeX418KfOg83jdeXHjSD+MbTM9iVVT2RlD+1LagR+okTylS+V71le
QaxsTZBf5Cv8wYtA5TWSJlnJTaB06tva3D8E0mQ40cVoLRANxu0J5wg00anl
HSrUAqIBPlEaZ6l+kLdrB498C0yNy6b3aFD12qfi3MrVFth3wSGTSY3qb5uE
k1vTWsD3QXz+Dqp/looXO/mZtsIc5nj1aTeBTuvwsc5ltEHE8zhLEQYN+Vts
mFqsaIMJ/eX+h3M01O7E1LfW0wYuiUpBzdM0dDt8IofgaIf920/HeI5T4/9W
3hO63A5MPQEN6QPU+DePB07Nt1N/+JvYw6up8a2zBYEKnZD2SNbaO5yGXpu1
eclldsNNXbefcso0VKYrvEmP7yf8j6eQafIMBxoXE/BofD8IeKr6sgp1f3Ny
3G/xeusIfNr01t37LBtq6+bVty6nQ6duyA4+CVZk7nriF037D4h1JjUU8LKg
ov3HXhSxT0Cu8VKu9ggT2rshlx59ZhJE+kM6lWPXQTjX9jS77xQ4bpe8Ihi2
CkxLLHH3Bqahc+nLWuuDZVi4kGdaIjEL7rvcr0r7LULXEbOdEk/mIOP8HeEb
rxfAwZB3s3j3PPgaON0JyZyD7UFDRmzCDLBs92hc2jYLSSaRX2ZcFmFHDs92
cJgGQxXPM+V5S0Bm2l3LWp2EVNM74sep/wbulQ+1XBf/AoPzFGv2pVVAkQwO
1qgx0G9QVhAOXQNmbXdspjsKnMobC3I/rIFRd5elkfooFER3nrsatQYatuFa
BsdHQc7F1eK/pDW4+j126NLeUeDelflye8ka3Ak/J+e19hsq7OQHBabX4ED+
nwCH5N+AiH0B3NrrsLXSrPTHlt/AuMvYkXRhHTa/ZE7YyfkbkrvKPusYroOg
vW++B9NvEEm2/vHSch3s6p7/oztOh5VL0SOcruvwKOrgyJYyOmRG7VKhxayD
0GmplwpudLDf9LcsJmEdko6XcVXcpcNe53x9jdR1+EdYK9XUhg5BWtdsnuau
wxUJhetvL9Hh3tT7t6xN60AWKxqKy9FB2uS2SFT7OoQlPB+s2UuHn8VKcWq9
6yDZfdDfXZgOeqHt+d6/1+GJYpryICcdCJbYs2J/10FEdJ/Kf8x0wLbOzeTs
OsRUSF+5zPgFD1o0zMyXqPWdZAvk//sLDsDW0fX1dbh1j2WoZfgX/B9kK+P7

          "]]}, Annotation[#, "Charting`Private`Tag$5056#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Thickness[0.02]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$5056#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0], 
          Thickness[0.03]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$5056#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2, 2}, {-95.4618554621616, 60.25149214621509}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{
                RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]], " ", "x"}], "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
            RowBox[{
              RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]]}], 
       RowBox[{
         RowBox[{"6", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{
                RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]], " ", "x"}], "+", 
         RowBox[{"3", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{
                RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]]}]}], 
       RowBox[{
         RowBox[{"7", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{
                RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]], " ", "x"}], "-", 
         RowBox[{"10", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{
                RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]]}]}], 
       RowBox[{
         RowBox[{"-", 
           RowBox[{
             RowBox[{"5"}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
                RowBox[{
                  RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]], " ", "x"}]}], 
         "-", 
         RowBox[{"1.5`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{
                RowBox[{"-", "3"}], " ", "x"}], "/", "2"}]]}]}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[0.36]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[0.36]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[0.54]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 1, 0], 
                    Thickness[0.54]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.5, 0, 0.5]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.03`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.874472765769617*^9, 3.8744727992740393`*^9, {3.874472888032011*^9, 
   3.8744729261574125`*^9}, 
   3.874472990846383*^9},ExpressionUUID->"a02575ca-8532-45cf-bd4a-\
b8916bbdfe32"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "Ques", " ", "4.", " ", "Solve", " ", "Second", " ", "order", " ", 
       "differential", " ", "equation", " ", "4", 
       RowBox[{"y", "''"}]}], "-", 
      RowBox[{"6", 
       RowBox[{"y", "'"}]}], "+", 
      RowBox[{"13", "y"}]}], "=", 
     RowBox[{
     "0", "and", " ", "plot", " ", "its", " ", "three", " ", "Solutions"}]}], 
    "\[IndentingNewLine]", 
    RowBox[{"Solution", ":"}]}], "Subsection"]}]], "Input",
 CellChangeTimes->{{3.874473004844203*^9, 
  3.8744730246215744`*^9}},ExpressionUUID->"6b68a7fc-7869-4132-9cbc-\
ee3334d378b6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"4", 
       RowBox[{
        RowBox[{"y", "''"}], "[", "x", "]"}]}], "-", 
      RowBox[{"6", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
      RowBox[{"13", 
       RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", "0"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "4"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "3"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "6"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol3", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", "10"}]}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "7"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Sol1", ",", "Sol2", ",", "Sol3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", 
        RowBox[{"Thickness", "[", "0.02", "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Sol1", ",", "Sol2", ",", "Sol3"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8744730445739994`*^9, 
  3.8744731425444484`*^9}},ExpressionUUID->"29f40e09-aa12-4077-a6be-\
d1ff8f6b75a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "x"}], "/", "4"}]], " ", 
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["43"], " ", "x"}], "4"], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"3", " ", "x"}], "/", "4"}]], " ", 
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["43"], " ", "x"}], "4"], "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8744731443719645`*^9},ExpressionUUID->"4d4e3a23-9aaa-407d-96a8-\
005c182801b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"3", " ", "x"}], "/", "4"}]], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["43"], " ", "x"}], "4"], "]"}]}], "-", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"3", " ", "x"}], "/", "4"}]], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["43"], " ", "x"}], "4"], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.8744731443729305`*^9},ExpressionUUID->"095a1c7e-a377-4ab8-bd6d-\
eea57cd0cab7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"6", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"3", " ", "x"}], "/", "4"}]], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["43"], " ", "x"}], "4"], "]"}]}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"3", " ", "x"}], "/", "4"}]], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["43"], " ", "x"}], "4"], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.874473144375008*^9},ExpressionUUID->"5202dd25-5de6-42c1-aecd-\
6e34a315e39b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"7", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"3", " ", "x"}], "/", "4"}]], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["43"], " ", "x"}], "4"], "]"}]}], "-", 
  RowBox[{"10", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"3", " ", "x"}], "/", "4"}]], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["43"], " ", "x"}], "4"], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.874473144382126*^9},ExpressionUUID->"14e5ec71-e0d0-45cf-8293-\
d5bec409f099"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1:eJwVl3c81d8fx6+9rnuvkdAgyh5XRok6JzJDUshoIVSSrMyGlVBpkVEJmV9l
RUnOsfdIKDOVbDfKdvG7v38+n8fz8fm8z3m9Xu9zzufx2eVw1eICM4FAiGdc
/n8PHjP9u7kpgG2V3Ar+XQhFo4FCC/10AazEmVVl6xmCzCjfl0pXBPAzGWXt
4ODbSFzTY/3qPwEsLPTpwLTYTVQV9YhzeFQAR2qwekQevY44lb7uxK0CWHyG
cJUjxx498T539FaSADaRjvIxng0AuUxe6YR9AljR863nuZgEsP9EDnuCqgCO
OimjHK6ZCOrSf7iqUAVwR5JxqtFYIhg2MFd0kBXAcWVMXm+OJAOh+4ol1dsE
sMSfsJcd7C9BiOh4fQSBoe/7o6W+E6nglOrpKWITP1YPCk4vk8sCbBcM9oqc
5se3NV5JzRsWAoFvtW6pD/lwpnHRF7u0CoDlX0WG3efD92OgtWtXBXC7GZTu
HM2HFyPOW19jQ6BOSnVALpwPu/+M3X/dBYEAn5SjRX58uL7ePSdtCwY/+QPl
as7y4Wj8Vaz9GwaFptTx34p8OE7gxKMddlXg7Cse1gY5Pjy1y+Axm1cVIC6M
iuVI82Hv8Q7h31FVwDn5ubX7Lj481NfbcresCohOcdcvCvLhjK22MY4i1SAk
8vdrDjoF/7327sKe7mpgUZ3oKNtEwdM6Bwugbi3Y3TUyVF9HwRY5FGqMXS1Y
HFGyda6m4Gy5W701XrUggb3aPK2cgi/Kl16ip9WCYaOpgzveUjD9ftrbQJY6
cKVDS5jvCQVfyVq19KqoA5GDAy3LpynY3vrSEEGiAdjSpAzjbSl4XV+dfnxf
A1DY9KhWt6bgAhWbrnCTBtAuzlbmaU7BL7ONbJ74NgAhJ8XMaR0KfvsJquk2
NoC0yeDbw9IU3F96Iy3JtREE/jnoFvuLjKXDdtOaY5pA8vl943CQjH8PGHZm
JTeB8i9Up7keMra46vXU4b8msFEqaW/RRMbj114/utzcBEJucZkIFpCxhGil
TTNHM4ji65Z/doOMXwQE+t/2bwa5oW2Zhn5kPMfnXcp1pxm0LNRLrlwj48sZ
leqXnjQDUl/ZNtsLZOxNM2sqfNMMHqWm8Gw3IeMQd++9tj+aQaKq29RLETJe
FReYxIdawMfXF1zMBcg4VeneiRyjFjCw9ewvAi8Zb1/TtXY52QJ20o/3nyeQ
8U+Njyx2F1tAas2+ZskxEm5L/9gq/rAFVGuoGHQNk7D9sc3fLxJbwEiWXHVY
HwnHpoXp0dJagNS9HR9/t5IwKflAwea7FpBtyZKbWUzCj/ssd/z+2gKa6ulS
p96Q8IrBzeO/v7eASc3FVM4sEjahPA0sHmsBCjsnEi8mkbC/3/O7FYstwDT2
p5DoUxIu3/+xd3m9BbgzDzxquk/CqkPblwlsrSB/tC1KPoSE6/wT/Pz5W8Hn
Uw3sA4EkPLhgbjAh3Ar+NlWGxPiQcHNBxKc9Yq1A7W1xwIwrCYuy2wawyLcC
y11vFp87kPCot6hSOrUV+D7O9DSzJ+FDu1McKRqt4P31xEtvj5Hwrj38ysaw
FUg4XXv9zZCEf3HsyQnUawX3zA2HmXRIuCyWJuZu3AqWtcW2yWsx8opPU911
rBU4yC5anlQj4aK4Z5FPTrSCli2tscGKJFySp1NVb90KNJjTmzOkSFg6Z39Y
mV0r4Ok/fnhFmOFHiJ866MDQUy8TJMFPwh8au84TnVvBcNFmyVEeEtZfS8td
cW0Fxik9c96sJIzt2grSL7eC4pg8hRfrvNgptEmY170V7PQPc6lf5MUxm/vC
93q0grsX7FJn//Di+XPDSYKerWD++N5BkQkGG79nKvJqBWcOcQnr/uTFkaHD
drw+raBBbtjCrZ8XR7NmHpP0bQV7t5bee9rFi4t4I0PmGZzMcr+hopUXZ+5T
Trx1vRVwzDqxjNfx4pY7ftr1DPYc0DrEh3nx0fBr5AYGDzTw+x/4wIv7zGw/
hDBY/91EkWMhL3YtyBheZIyX/wrTYnJ5MQab8rsZLHo/XrYknRfrXtbR4Wbo
CQ9wd/r+nBdrPA9vymLonXXWe8kZz4vVjgu5bV5rBbYntvepxPJiH2pgGy/D
bw34J2h3lxcvK/okfLnSCpQUmo6FhfDi+2kEH3NGXs+EX0XlBfLi8qtWXGGM
PFnY/Gp7vHlxhuDMxpULrcB9zoxAcOfFqV/9N3gZ/fg2uEdL1oUXv/sxl+94
phXoNNF9LM7x4p3no5G7bSv4r+RLfqANL3bJrfiiZNUKhNJyptIteHHcOYP4
tOOt4PaD21JtR3nxxv09xS0mrcDKVTlZ/BAjj6cg7YBOK8An2b8a7ePFQUwD
TTe0W4Hc4UE+LyrDv+3DRR/GetwUib5TK8EYf1iZM0i2FVxid6iibePFJ7c2
60VJtIKuv/vXt27hxY9Sf2sYb2sFWc2jnpc4GHl1WI8O8rQC/vef8h4TeLGd
yreNfJZWEJz+ZLx8hYgdK+Rvqq21AItgnTPkaSKWuKtw9ehECyi/KJKw/zcR
D/a/0Bpi7Fcpq9kv54eI+NaIh6x4TwtYU3phVNxBxJnbb0vlV7YA520+YYON
RGxVqv90vaQFdHCYIPZqIp7UDR5Zzm0B6cMrajbviLj5nu7Y0pMWYPbIUnwj
gYhvW+iNkxxbQMBespHBYyJ+zV/zjMmqBWR0NlyLjSHi8SWLxlTDFrDBr10t
cZOI2YRPRP1RaAF5jyWcDZyIuPOYKMqZawbfVAfux54m4u1O1SlcP5sBa9fT
0l4rIlboozULdjYDe0EuLjcjIub+LTylVNAMiE//5MYqEfHX09J9ly43g/3q
2V290kTsQbrxaLdNM3DqdliX2EXENs3j1yP1m0H5lh6zdwJEnNbBXGMq3gwu
x5XP9S7z4KvWQ+b17U2gKf7uPslqHpwiZ6QDdjaBxX2659zKebD+3lTSDfYm
IPGNHvnuHQ/+mF8i5UhrBAHCHn0GWTyY5sB5QuxTI5BNsAp2u8eDF2/7utpY
NYLIRMnqd9Y8eEvAubz06w2g+MDg1IY5Dya25x5Ssm0Aw31xgobGPPiFyJ0K
W+0GsH8bt3OfNg+W+nyzLmmzHownzXJu7uLBrNlsle9v1wOD55/MDKe58VXp
i/ka3nVg9t4AnXWUG4tVB6xpn6gDiTfWciq/c+MzrpdH/qjUgemzmhxaX7jx
C/FGPjtaLXgk8Q4plnHjgXm+MF3HWjCU+R9VIJIb8x3iatA9WAMinzUPtd/m
xipaylrsW2uAyt3JmJhAbpzjrhzrNVsNwi7JTLBd5ca/9iaGmqVWAznF9FfL
ltw4sSNSjoW5GvgWJvEPSXLjgDtXFKwKKoF4WhlO3MGNrVSf7fwUXgkaH/e6
W2/lxnn34mpabSrBdp+tzR3c3NjBUmthilAJqvY9Dq2e48Liu4uiRY9iQPoU
NZ+FuLCw2XXbqy8+gYx6/x4vOy4c5D3OlKBQChL2+upmn+TCzMdGDG+WlICY
5575Q6ZcWGZV2D8BlABPr8tRRpALr33J/3Hx2DtwUOz0IbE9XFhHtcQm+EIR
6PKFGU00Tty0tOOYwNc3gFmKw3dXCCcOijAUH7udBBZiWX5ZBXJiTvQ6JPVI
Ahhf2zwW482J96+sVuuzxoO2z8uyS86cGC5PGh0LeAQSgicHW44y3m+8ZUoJ
DQHU7lY9vy2c2C9Fu2tLWCg6E/ZkS3sWB9757knlIeZs1AYWOfxSOfAu9ef+
Fw/kILBmvSqezIHLnO8FdXrlInHPbd89H3DgP29vG9hN5qGfZ1OzhHw5cMy3
cqUtXgXIWStf64wuB16v+lr2M7oEuf9tPj8zyI4nNt+oxsdhdOMcyxseAXYs
9TrS5hdzCyIoiiHdcFYcHB/1Jd+yD/VFJ9zJ7WbGw/r7jCy3jqAvteL/nWtn
xkIBUVvdqCOoZTOzY0sjM06PN/xx3WgEVXiViNwqZ8aCLS2uVwJHUKrdl9yT
aczY/BjBqHFoBF2S5+1Y92DGIicV3vCk/UZrTbeEzYnMuEF658iU2BiaZ+U8
yMbOjHlqgJ7kvjFEO/TgfNkmE75s+Pi4gdkYGi58nrP7HxOub8+2PBk0hmoS
y7RXepmw6w4Dl4CvYyjm0vy51EwmfKjsA/uHu+NoO7dr9rwOE75te/Mv98AE
OlPREiOhzYS1ouhHCX8n0CtPFQ9zdSZsf6HGpotjEkn1r2r8J82ETVJvCm9V
nUTK/92rcSQy4c5XnbX0O5NIx6zoe2c3Aasz6QYuyE2hMGbhakI7Ab+SSA3P
PjSF6kuCMpQaCDhD/YiJhsUUMhHTvxJVRsC3zr2K/uY3haxmv60efknA21ii
NNVrptDFRxtbClwJeKeLOXXVYhr9p++4MnSegBP/3PQhOk0j2mr9ANGOgBe4
dc/NeU8jT8eHaa6mBKzf0f5cJW4aBantVhHfS8D1PFeXb/VMo4rxSEEzeQJ+
P6eQs2N0GjE9n1kK3E3AHwuDaHcXplEEW2nFVyECNvYxT28XmEE78x4/27m0
iYjZfCusZjMobcvpswETm+g766aXgP0MkrkhJdXTv4kUbj66TLs4g1SOfSi6
hzcR9779epzhM+jI3FAb/e4mMnAs+Izfz6DL6nJs/ds3kfZUbwNtCw15sn3I
9CVvovEBH+sL4jQU0G1gzM+8iTRPCpuly9FQlM+FB0ZjGyhDhLzhf4iGct6l
iLwv2EA/hCLUAxxpqDBcufxE+gZaURzskHWjoTLLijN/4jaQ0Wjh5AtvGmpa
6E+TCtpArQlyUt/CaGhCfavSU/0NtHXjRlxQKg3NsmV0UDU30Kjqo03TbBpa
7lbzapHfQPa+5Uw/39IQp6/Fexa+DTRYfPiceTkNUfR/2L5k2UDhnsdZ5apo
SFjIY/3A4jqySv/VUVNPQzIl93Q8+9dR91UJb+1OGqJGbP/N27aOPnGdfyz8
lYb2W+XeycbrSJnV0K24n4ag1AE5vaJ1pKN0JY08TEOGiw0tw6/XkWZbxKDs
CA2Z11lfDXrGqE90Q8zjNHQqbpRPOHodrRcL0xKmaOics09xUfA6akrLIv2h
0ZCLBqv1MY919ODYmTqmvzTkzv54ZdKBMd5mStnneRry7dmVHGG5jpitNmLP
LNHQjYz8QxKG60jLQv5P5goNRfiCH58OrKMvJmyBeWs0dF+/LdRGcR3RVh71
ua/TUJzQaakFsXVkfImteGqDhl6MTjXE8q+ju7wf8iQJf1BGScBlBbZ1ZP9O
w12I6Q96E8FFaliio9QEteRqBpdYPct3nKQjndPxQ3LMf1CFlPSJzQE64hL0
GjjK4LrFdwuJ7XRkakQ8KMXgtrojzzSq6CiIozfzA6O+J+7Lgc5iOnIbvl3D
xuAhZ4fBK5l0VLD48wA3Y/7fGnM3uRLp6DEHb1EdQ980+y2J1zF0JOSr332A
oX++h1QLb9JRohXR2Jnhj57x3GXgGh1FBgqUGTL8s15X4PZzoqOcEKO2H4s0
RDT4+J+ANR1d/tWtrMLIT3Cr8bG3RnQ0sC4aqTFHQ9vHvs0Za9NRqFzprbkZ
Gtpd6vJkVImO+JvDq89P0pDCnUWNkF10VG6XshoxSkNq1uG9OwTpKCb8bMe5
nzSkLS0Y9IGdjkxU7P/QBmnoyFLqTsuVNeSR5MGs0ktDJvUqlbNTa8jf9UOx
VBcNnYzHjjFDa8ivLK6gvY2GHPcNZVVXryEL9zHNA9U05Jy1z0q/dA1Vrp46
efETDV0SecjSmLOGTpe3x58spSGPNd0zbQ/X0GfvnugzOTTk5fac53j4Giqv
XHoXlMZYH4OL77/4rSHumzp0y2QaCkLZAr1n19Cs+t/O/fdo6CaVpdLuxBoa
ul02dDichkJe2bsP6a8hLx/vddZgGooMJTf+UlxDbrW7rry/TENPDHxu0NZW
Edv3sfkWPRqKf98mf+3PKqoS3eb7UouGEmVlev/9XEVE+QgWORUaSuHpV11p
XEUS2feOOG+jobx2OMHybBWZ+Z30956eQfkwMS4iehV943DyJgzPoOKCf7pc
N1fRoumvcJ0vM6jsccYLkvMqSjV7szjGOG/qrIknRdRWkWBH0MWCWzOoseEC
U7L0KtrTRvIYuzaDWjTRm53bVhFPxbfszw4zqHObJ9du5lVEdrBqrtSdQd+/
f61Q6lhBvvKfL3Azz6Cf5ipuBdUr6CFsTuufnUajlVEiaqUraD1+Ve/s92k0
nXbQW/PFCvqW8aU76OM0WnZJkz3itoJo1ydJPB7TaO0bvafu7AoKtcu1vmg/
jTaMrMKMTqygg7tuHPUznEasClzfzQ4wxlNJO5MpNo34Zt2f2HCuoKKPU1eP
NE0hOb8Dm+7py6jrotglU8oUwoNmcr/ilhGNTaQ0dGESWek6WlrfXUYHr/f+
O9U3iUJIMbnAfRl5/qky+Z46iXrTB60p+5fRdnUWkqXyJIr8fCu/oHkJtS58
ti9Sn0A79z3t31OxhPa5fmz8JDiBipOz2RPzl1CD/Lc8x3/jaNil0z7kKYMN
aQK3346jfRuSXCfOLqHxXlmOdYlxNCpXf37+7yLSSbE6+nlxFAXF9se4/l5E
p+NvKwe3jyL+xT+lA18XUSjyKa/MHEWHKoVJteWLyMX/nIag9Sh6an2p7GnE
IsqpkUvuy/+NjoTxCuwTXUS263MG7eYj6NXgiRr/wwtI5buK6OPDP9Dekb2r
XWoLjP1TkpZI+YFqJvmoVJkFFE9jNdT7PoxGl9qTRkkLyPpT+ofQwGEkx2/i
dWJgHvm8ys0yPPsdFeofkVC8Po9KUU7WEHEA1bxVuzX83z9kvPXMwZMDXciy
RKBEK+Uf+q/s3OZOxy40Wv53Ku7xP9QW91WfOvEFcTblW5sG/EMZsZd6pP51
ItMRBeUyg38ouFbByWWjA/UI7xl6/PMveiPXOpI30ojGbm/RNhD+i2TenX+v
pleAuIPf/nnM/Rd1CIu9PZudh5T8jNKG6XMopftKVV1lFvJ1D+YO+DGHPJYl
JSY+PUfsdr+//ZfDeL5k91XnSxjYrfbOh//gHAq7m+nZYlgKHEZPvh08P4ue
1Uoc2oc7QNlTGb1xqxm03z9yh6rrCOC0G3Nk0p5Bbqa6q2otI8BKPCNEdNcM
cj6Kz4ZTf4O/OZLYZGoaCSh2F5NXfwNZvFOr4OY0Cha90PQxdgw8mxRUCcia
QsannI8sNU8CH8C0g7g6gVym9I7Mls0C6kTvvPLzUfRJtOgI8cMSOFLWz7Vu
NYxcNXc9cMxmhm9yXmvWaw2jTwZOjnV1zFA46erFh+LDSFtI74HECDPsWWJ/
dLTrOype7ymp3ckC9wRaUZ6vDqG5R5MFbx6zwKrbC0RoMIg4JG8U1AayQvp9
VfaI4V60RXrCskmHHXZcrb8gmtOLZPbrhn88ww7TzO1q33j1osozF8qTAtih
MX9o2Ff2XpTprTsiXcgOE552MssqfkPmZXUBF8Q5oEbytc1m/x60xhz1S3qF
A3pkv13mE/iCEs52SpgmcEEqyT1UZ7gTXeCtH6zL54Jzngokr7xOpCYZOyTd
wAU9tbMluww60Wslp8AXi1zQpz3VLC7oM3JZiXluacEN/03KG6m3tKOdi2VD
Gaw80Ls460ycczvS/rpo5CHKAxeD93gvEdrR1itXKNupPHCZIvbyg3ob4zxz
uipixwPpGvwLB1+2IJ2dKfmpb3kge+hyir5nI1pl0i3IsiDCOyY+JZnERlTA
LyLs6UyEnEJ/mzkzG9Dws2OtwgFEyJ09tdjUX4/SHn3op6cQIbl9yOSYXh26
MUJ4KDRDhMLbapethasR97OQk4Y3eGHCyGHSh8Iq1GdVLYIf8ELRNxWSoqZV
SLnpLDvlFS/ccfi92cDtSvTXVoFrXzUv1G2zMqrsQcg2j5L4jI0ErZwlX3UG
fUAVd3R/ngshwahrXpGP3r1HHdcr/0zEkuCnoOqrFrRSJK337I3BSxLc/djx
UOfZElQ2SGW99ZEE/6K0/s86RUirftK1f44EpZr/VT0MLERPXA/bMW2SoE2P
bs7x4gJk/Us+YoWHDPH0L7/Pe/KRyV4ho7N7yHCnqqFCKl8OsrHw61uyJMNw
o/HVXaFZSFa2bDzjPBlOn41sfDWfgbYnaJbsuUKGZTENzq++pqGjimcsHoaS
YV7LQ53DWknIK4Y8vvUNGQaufP4Odz5DOr+ZjLTfk6GRFH8wZHqK1h1DZhWr
yLB5c/fVm/fvITVN06/Xu8lw9lmC01yCAzp1uc/h+QoZBjE/qdXfbwTuJ7vn
8jFRoFKiY72gxlXgcekk7wE2Cjyh+q084nAYSMmIvHyAlwJLeq1D7gRGgR5u
fRF+PgrkxVOSNbaxQOhK3cM2QQq85nx5ouZJHODUPqy/sI0CUzXlTWoLEgBv
27jqWTEK7CJOvaltSwZvrN4cy5OgwGQb9QOOYa/A9vRjPgsyFEggvNt0rMgE
1t771FXUKDBhQlBlxCQb+NwdPPZegwL3fvF2cOrPAcyLkuclNCnQKUOt1mk5
DxQtZ7S8OEiB6w+eLI5EvAX5kvd68wEFNmuvPi6MygfB4S46rw8z3peyrd0r
UggyNQfuqelRIHUb95DncCE4Whcl2a7PqCeXLRZmFoHwEqvAo4YU2MR6ifzP
vRhU2dLcs40oMG5FREZV4x2Ae8jfxo0p0IHWCL3W3wF9johYLhNGfr/8bYpq
SsCrNmVPHlMKXP0q6/kvuhQEhK5Y0Rhc39IbpXriPfCtGxYuNKNAV7++ejv5
D+BBSJeg4zEK5NzdzxrGUgY+jLSR/jA4u73/8H/9ZeBk170eS3MKNA4cuNFV
9BFcthnXimfwpNTgR3p0OQhUaCcVMTi6c3B5t9MnkKdvKpbNYIUbQ+qm2hUg
yTPyoD+DW2S/e/oIIuAzWKkpyWC37u9vn08jgLKsRjIY80VAj0UHBwwuBmFe
VgZbxc0KXm/D4KpIXMQBhl7paQ/V6AOVYGY6WsyY4Wf58NzxlxmVICvNO3sv
w39D/DWPIv4qwFFxeOEfI59nM3P3629UgcjdrF33GPm56nrm9U9WgazyaSEC
I9/9CX+b/1hVA/UNkwfGjPw5/3hOslRXA9G78aQrRyjw25F/nMLKNSDl4zln
Fx1GHole0gpJNYBsdNZVE1JgwOw/PchRC7o63EZ/MvpvrO/tdNKrFrD5RhQ6
ajHymfN+FXS0DtyqvxM8qU6BZQYLKLa0DuzMEN81u5cCo577DKVL1oMv+2Xt
W5QpUN7Id1vrWj0Yln3wi0OWAukvFjV/uDSAb2Wfu533MPKb9z218KUB3Ek8
lpu0i5FfyvWnO/5rBMa3wk0jRChQe3GpSEW4CfSRLlVqbaFAoolfp15YE3it
PuJcR6HAvCU/srt9M6hmbo6z5aDAG6YriiENzYCFghodmSnQLM3fJE6tBSwE
F2yErJIhzSzgbgWxFbht2Yz6N0KGFemrmZ1+reC4KRshq5cM768G1I2OtIIQ
HRUJ1jYyVM4IZCF/agOLobMihe/I8P2Nioq3Gh0Axvmm9N8iw5TsjdYPbh0g
zc1fr8aTDCO7Dg1Wp3YAwau1K8edyPCUHFr7SvoM6IbMRnb6ZLjSjfYTxj6D
8zzXM7ezk+EBxcpC8/gv4GPyLZYt3iSo3tUTV9H4BYh9L+y9dZ4EqYHTAQr0
L0BGxEYrwYxxPjZu1eU83wUiF/rftEmToMAF9y9Irht8c9Zs1evhhdPJ2+aV
KnpA6c2WMRVJXjimq/ItebYHtCdTfxvz8MKfk/rl3JJfQcW/1C/Ef0TYu98z
bPTOV1DuV5obVUmEdV0Ngi+OfwO/Pz7wd7UlwpdEX3Xe372Auc7u4c1AHphY
FC0SuLUPFDrlA/IZHhhn+2p93KgPtJ6TLT4CeWBMVkttzZs+oNwXrJ7CwgP9
jkhaBfn1g1X2iJeCEdzQIqjDd4pnEKRtJP9p8eeCzL5bBpxEhsGba2PZzts4
oO25nM73asOg4zS77iSNHRYag0ai+TBIoUZrb1SyQwexiyXFEcOg5ZUG6nFm
h1UN5bGs88Ng2kFvv34uGwzd5qSX3vYDFF98FcoixgoH2Fa0lid+AL+88Z/B
UyxQbfbeXhO2n6Cm+UZVRCkLHKkpFZvX+gmU3N1zdM1Y4BF3nlXd7J/gxROL
CRdfZshaWfjmV+gvEEZke3O0gADtcw1e73v5C0gkzJW99iXA4qcDSdFlvwDm
m7W+p0WATpfY76rO/QLBkM2CO3IT1ArYOoaeGQE3OaQcFV+ugwhnJmFJzd9g
WPf+4ZDUFcBBNL/tQBsFt1yqt3Wvz4JT0rZYg2sMJPAXjWa5z4IcHadN7t1j
oG9dVVzv0x9g5u8XXGQzBrJMP5VS/GZA3GiKP2vtGCjR464z7B0HUpVz1zKS
xoEHfabb5ekQ0PN97DBpOAnOHa78ecmgBoUO9+h6ps2A8qqH3S+NVtDQh6NX
/MpnQKfuN0nuzRV04DGOu9E9A5K/if/b8m4VzerlTERx0ED35dSzZEk6OpMb
/CDtMg1Ic/Fx+7JvogO+u/u7VP+AV0VbrPf7MOMVNs0P2xxmwYEtnBztsZw4
PynC/MbfOVBh7zwUXMePr6Y6UUasFsAL46R91oRd+MylxB13bi+DGOO/O4CI
DF7r5Wqbu7cMNvwsqvJVZfAzI/8b9onLwK0stI7PTAZ/ljn1XaVoGfyBDz+n
hMjgI2NbXg2MLAPXi1w7pyZlsKzTw917DVfAT6kRs7lSWTx/OlJ+kLQKSHo3
Q/BheRzbutRvsG0V2Bc/LYi1kceKB11iCqVXwZUtn5kMrslj5+36M3fgKpg6
V9XplCKPe/tY3u71XAWymy8b7dflcYX1zb2R3atAmd9DYbVAAd897qupmrwG
pPkrxmtYlPCjFjm3/7LXQFNoeIuXiBJONvj+Yk/pGggLlUlaVlLC+QcNWYU7
14Bl0JB9iI0S/iYr2k7noIOX11Wlov9TwjLMFU51XnTAp5/Dv9VYGe8N9owH
t+mAENYrOm+vjLWXpZre36eD4jDP2JSrytic9kA5N5sOfFP27XJ+ooyv951f
ffCdDrZr2Dk861fGdYVssTZH14GJ4Wj5TioVdyiWVXWeWgc74u0EZvdRcV+W
+8JR53Wger3y62tAxbQXX20P3V4H6dzXv34yo2Kh6Ow9kqXrQM/q40zCZSoW
Zz9zKrmGUV+8SYv0pGK52/zRWzrXATFT672tPxUfuh44yzGzDhTex7e/jqDi
C46mH6clNgBvnrxp10sqdh9iol2gbgAbJ9/GL6+p2M+mRPz7wQ0AnGZcinOp
OOaYWMTnUxsgZ+jTfuFSKi7WmjMvub8BKoYLXJ1aqLii5HWocvIGmLfjUXf5
TMUNKrYlWdkbgK40c8Ooh4oHpKu3JdVsgNGTdz7kfqdiVsGnozdXN4C93U/y
j1kq5qfdIPFzbIL3JJ3NuHkq3tXgqpEusAle+ofvV15m6A/SjmhQ2AS/9H2+
s21SsamV1BtbzU0wJpW4rMusgu2plJ5pvU3AHPSk0JFNBfuP/NrDd3YTnDLw
OmfAo4IjK1pN0y5vAnZWOQIPSQXHPSv1UffbBL137J69pajgYpPoWpuHm8BS
7DR30hYVXCXlMzP1fBNcfXIh9sdWFfyZcHbLjZxN8MDO1oVTVAXTivdeSK3e
BIq+gucXd6jg9fvb76l1bAJ6bRj1k5gKJl5kf1c3sAmA/P4cx10qWFR3duDU
xCbQ2JmbPiGhgmV39LFOLWwCIedLi2a7VXDy2vm4Q0wE+OamgO/jPSo4bdwq
5w4HAdqxWq6WSKngnO6jFR28BGjC98fmg7QKLqyCnSKCBKj0tuhyoowK/vBW
fdRBlAB3HrjDbiurgnGy3GquOAGuNZ5jWmZww10x0oIUAZKTjFW95VRwu6+g
xCFFAtz0dfBqY3CPI5fGHVUC3LOz7xm7vAoeMt8w6tBkcMFSwHYG/z7477QI
JMBZUaE5MoOn5cavOegTIEfg685hRv381sHwXBMCFI2VX7rP4DXWzoR5CwJc
lDiiIcpg5r91eQdtCLDx2iuXEIYe7u8fKyPOEuB/SUTHeoZ+vpb87vYLBPiU
6EyYYPgT/vB6QtiNAG9MvN46xvAvnpG4ft6TAOeCBm5VMvKRfvyAL9ePAPvT
9gr6MfJTuhW2Z/4GAb49MJnNLamCNa74ax4MJ8DuqDOi/oz8D9q6m0ZEE6Db
e9ZD1Yz+HDFwPN/+kABtqW4z44z+maid8hF+RoBpQoBpcpsKPrHL9O75FwQo
9E7Hok5EBTusaRT8yyHA6GeBZApjfVwcl6/VZnx3tgrVKwbzq2CPbvHe8FIC
3J/sMVNDVsE333IzCdcQYMAHo5JfXCo4InlT8HwTAb6QCvAsY1fB9+/Oy+R0
ECCbHI/GZRZG/x2HzLUHCdA3JO2ALZ2K082/OIX/IsAnF9KVnzHWf+7BBr+2
CQJcH1p5/JaxP8q2FqacWyTAxF10gUvTVPy1OXw2jMwEdfJU+7j6qPjJoed6
lkJMEC8TD6V2UbFFQXHinh1McEuJOI2nnYrb4n4dqZNjgns1y/wsqqm47vzh
BA59JlglfVo+M5uKw7pO0b6aMEHJeMtfNalUrGPgoZt1gglqWFzwK0xi7HeF
lzOG55ngbJxuBD2GikuW6IejgpigkU7XSYMrVOx9STDeNpQJbhwf3PrdiYr3
DspPy0UxQXPSVys9eyp+U2Ub1xzPBBWeBycHGVNxxr33k8QiJpj1OvTlw91U
HCfp/fjBBBMMWy/SdXihjE/GRY+fnWWCl6Qv0zXvKGN+rrSD1CUmqG4beyeb
cd7ep30e62BlhjrdDUNmQBlHfFDW5hdnhnQaXS2nVwn7HpsaeWLFDMtOuT9z
WFXEalXMBy6cZoaHzpSefDKgiP+qiT5Qd2KGLpcXj9lUKGJ3USPNnmvM8Ex8
xnzSLUXs/Dvj3tZ7zLAjO+8dfVMBWwY6aCRWM8Nbs5wW8xPyOO65IPtSIzO0
175bkVcvj3tQXfeJDmbY+5ZpjvW1PLZilffhHWSGLB76s9Fn5PGpe/+Kbi0y
M/4TEr2WWuSw7cswFRdZFujAE2ovFi+LEys1mGqUWaDT7atDKe6yuP/XeIe4
BguUsIf3PunJYnsZU48+HRYYEzU/XP9XBp8u2PLW1J4FHv6WHbvdUAafq85Q
UHvAAp9wby3P/i6FU36fosc+ZYHFcoG+bflS+AcHT8tMEgt83AVcY25LYQeT
q5czs1jgg+aQmC+7pLBj974c0SoWuFud9UDM6T3YeaxBmmmBBfJ1eic9qZTE
bjxTEm22rPASf3/gEy1xPOVfxspznhV65d80miSI40vjd0cNXFihxGkdWBot
hl1qZXIqvVihoH1l867nO7HDTWeVdzGsMPjEel90yXZs8+8HSK5ghUzWz7PL
qoWxfv83+0sSbNBBmyuaZEjBtUZZhzJl2GDn01uuHl5kfOT9dfERJTZ4fyy9
bJ8lCR9+KjRyWosNVkUJ0SUFiVj72MnLx0+yQft0DeLNmxx4b3W7//4INjid
x9ppLUJHYrl1ceyTbPDWDkre1NQYOPny/YemWTbYcClBIObhDIh6nDNwf4kN
+imIk3lezoH5wPsSW9nYId41lDlpuQSaTKzeSIuzwx7H8tyzvkzQl/a71tCK
HS5nKDsbn+GFrSpsC1FV7PA609BFS7VtMPC97glyEgckGMTbPzgsDz0y3Eo0
lLkge+N/LtazWpDIvM9B6Tc3VGfhZVpW1IcfrrOcGJ3ihrb/lMbyTPXha8G/
rgVz3PCfvcw+uqs+/B8tFZ3S
          "]], 
         LineBox[CompressedData["
1:eJwBcQGO/iFib1JlAgAAABYAAAACAAAA9EoCYoCMEUDzXCg3/GhGQKAMFT+i
mBFAauwdEoSdRUAVvqUooLMRQLyc/PbLwUNAACHH+5vpEUBminImj1s/QC83
+bj77BFAAUFXCtjQPkBeTSt2W/ARQE/JMI4pRT5Au3mP8Br3EUCzCySg5io9
QHbSV+WZBBJADliGlsrqOkDrg+jOlx8SQP9kTsJOPDZA1uYJopNVEkBQl7+W
204oQMZUiZy5WBJAvhx1cc4SJ0C2wgiX31sSQIYcYLsc1SVAlp4HjCtiEkC6
0pPezVQjQFVWBXbDbhJASBnfGyaBHEDUxQBK84cSQFDCzjbdUf4/0qT38VK6
EkCeK/+MjVQiwM5i5UESHxNAjXsqNEjIQMDhBKf4lSITQIVWvYDgO0HA9KZo
rxkmE0ABWhEx5q9BwBnr6xwhLRNA6zTybTeZQsBkc/L3LzsTQKEqpMjgcETA
s+LbsslBE0AixSbk7FJFwBB2njw=
          "]]}, Annotation[#, "Charting`Private`Tag$5216#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwVlnk8lN8Xx2eYsYylQpIShpBKKtm514y1JGUpsiWp6CspshQtSJIWa5bS
JoSkyJZ7U3alZF/Hvlb2ffk9v39mXu/Xvc+953zO55znkXS8eOwMG4lEekr8
/P//+uDhybU1QQzH11sckP2MBvyEZ9qWBXH1hVp+baHPyGR919ynBUEsEvaQ
NEv6jCTU3FcuTglifPRPqkdLESoJfczFGhDEz9DCQmxwEeJSaNqGvwtifcN9
VJdfhehSyTPJhCpBvL7lQqhxfiFqtTwn7V0uiJU2mYy1JhWitwELOxS/EPfz
3b6+6FaITH5tOZD0URDzMS95AM5CFHnF4dCNeEF8V+Aj+ZNsAVrh2mFiEyuI
HR3OFUFaAXJOnDBVjRLEBy5FnLk8lo9Uym5ZjocL4uwP/M117/JR66bXpxxu
CeJYS5M0z335SKJw+Co8L4hTXeL55WTz0Fvy5VckFUGsnvrjJfN7DlI1S+N4
sl8Ql4VG1+57noPKXnWf26soiAdjTYJyr+QgloHpbscdgvhzoDafn2gOEg7f
nft1C6HPo2SlGYeP6JboUHkwSRC/vqLYEtWSjU7stx3lrRLArbandf5MZKKB
wMjDr8sEsEmf0rNH/pnocmP1O62vAljbwsvKmpaJwn3Ur7gVCeC/7zdVnRDP
QF/RppXaTAF8yibiJDd4ixSM6/gjIgSwb2XXsJbFG0Q9Y7Bvs60AvmCVIby+
MBHV2e09PmolgEOw1HxCVgJ6emLLtc+WAtjmqLVr1qt4pGz8r/SUqQDuO4fi
L4Q8Qc77Y6zSmALYdJ/Iop52FKogD97QkBfAFanXOX6Uh6Cwp8G1tnMb8A21
tot7I32AYHPphRePNmCupjcLLnwpAO98HhIYvgFPkt44JxamgAsB114539uA
fS9tXHRxSQVlMvvb5YM2YO2nvmwNlWnA1zPp0AfvDdhlbXRP3YMM0CPgJ//N
fgPWz0t+Phr/HmQfVhzq370BxyXrqbj6fALHvsad3lG1HntfWzMUXvgC/P5p
XXjYuw4/duFiRpv8BHlX41zeHeHHrBhHvXzpJkB3uvS62ZAfq5+au/wHNoH7
poYsMoMft1ewBfPbNgHHHbMW5kr8+Gg358DGqCbA03ZUZ0GEH4uyNt7cQ2kG
dtrcIswePpx2OCROs7MZsFO9Sxuv8OEsZs1j6YBW4DZhQiK58WFt3eAc7dhW
0NyxXWPHWT7ss9W5Su19K0jP/Z3lZ8WHVZ+Wa/7qaQWW5/YkSGjz4dDSmeO+
um0gpXrAw4WTD4+/KXa0JbcDk8cWEqtPeLHTvWLtRLsO4LtvnZFBBC8O8nhu
nu3RAZLrKi49DOPF1IO7FRKDO8CqgOZXegAvvkURTZrM6AAZEXRnAyderNPp
8+rRYgfgjfr39qECL97J6UgzutcJVA+k1rfIEudzpRbeS+gETg2OK3RJXvyo
zWkmMaMTFG1sNMkR5MVWkd/d99R2AtfooomWeR58Mfls6NK6LlAVc1dF6isP
Lrr7W5N1pwvMqjAdLhTx4GsnA4+NRXUBevNySE4OD67PVUv+8rIL+Iq4txqk
8GCFUqMrZcVdYMcTy+sX7vPgTFXFl7snu4C52vrknGAe7E82fO692gVutFT+
WA3gwf94rdt0qSzQvFlL4pEHD35YoHFwdT0LhMRJfc05zoPtmkd4+GRZ4KN6
x+iqKQ+eajF21tvFAqzWaCHDg8T+N5/U7PeygOoWmnOrJg/utf9yS1mDBZwK
v4ZLKfPgbte1iCnAAg9PXv90YQ8PPhcQZPFIlwWG4se51iR5MG2ITdLtMAsI
aabtNdzCg58udZSlH2UB2H7a+pEQD154WGlebcECsVub3kpxEvlY0069sWUB
g8TPJoZjNCxsyChvcGWB8fvty5QBGmbljHc0ubFAnP9S2pcuGl4tgVlFl1hg
zF6NU+M3DV9hjQzsvsoC0aYncuZqaDjQYXox34cFgM7V0x/LaHhZdG2H3DUW
eEzPQbsLaLiMd1U17QYLaArW/zfygYarcqmVn2+xQD/71JY3GTQ8oK1cnx3I
AuHTG6pOv6FhiZjCfXeDCT36Fb0lntOwGP/PIhjCAj0NR2Q64mj48buigy13
WeBemVv9k0garnvV8vHYPRZQ+nT/lmU4DeOo8N/pYSzQ+SZdUTCEhuVpZgGD
94l6xFZ31t6k4WPVmQ/ZHrDA3rsjYWF+NDylp85aIbjVh1vDyJOGXcae6rc8
ZIFAF7lh6kUatnsSkxD5iAUUThrElJyj4XuT4wV7HrNA0yFnvQBHGhaoueub
RvANzaApDRsaHrtn9pESwQLyu189n7cg4rl/TEeb4Hqxr0dyjhB633m6aEnw
df6elUtGNJw96phvQrDMGildgUnDnse6LLcT/POfuPWoJg0bt55NbyXO92Vp
c6Uo0/CHB2ci3AiW+mWb66RIrNdZ9rOI+Gq+XHOSlKfhnwW1fnsJ9sqOF+iU
ouGrN30VHYh8JF4W4DgxGj7Vt6njApFvZUSL2/FNNBwXHnDyeDgLeATObxXa
QMNyAUlB4oReWz03Vf+k0XCM+80DpYS+ZWeUfe5TaDgB6ugZhrLARUsL2YOr
3FjpxKYHKUR9SlQibn+d4MYJu06pk4JY4IJc9t4bo9yYJFFiOkfUe+PmX12a
/dxYPk6Ip5rww7lFfs3cZm5suz+0kZPwi8Do7hGPOm680/Biojvhp8I249g9
Ndz45cuqyzleLMD/OXQ6BXHj+qn4wjp3FsjLSH1xJp8bT3Xn9Kb9xwKnnlaY
0j9w49Wu8BA7F6LfAjgy4pO58Wlt3k/HT7OAnfv2kyeSuHEGm+58gj0LcJ7S
5d4Yx401rjpu/3ySBawZt86E3+fG2/l+f7hvxgKU/c8FD93hxqZBOd+1jrBA
hhT+wnmTG/ccSNKtOMgCJOqq2M0r3FjgtmiRqw4LJJf7NF4+yY0T1yYXh4j+
frLPi5lqzo17W6/f+SfDAmGJHlmdh7mxYM5qcIUEofdl11AjyI1ftOorTgiy
gJa4rbb4dm4cu6TaozjeBRRDrd6ab+PG6830s092E/NqxkIkdBM3rr4ZmSdX
1wW4qk0mp7m5sXCMtkhKdheo94LJVX+5cJg427r9F7tAebemIGmIC6/e1PNx
tu0CBcZqNw50c+E2pkqw2qEukETfZ530mwubMAwNPm/vAq4/pPi98riwoEZU
4b7GTsAmw+kleYsL587e+/pIuhPMPGTvtfTjwpK11Ko43k4wtLR2JOwKF/be
L/RWe7oD/Pg1v2POmQtX6PzqsCjpAE+uj3TUHOLCcfuPGBdYdQDFhu963hu5
sHRm3hVxz3YgBauyM/i5sEFUx6ccy3Yg/LZMvJeTC9vr+T7tUWkHyzfQwuFF
TjzNr2e3Nt8Gyne9z5Dq4sT/ffPh0PZqA3aBkRtrUzjxo7p/cok2reAHmOX0
fsGJRQYp4ctqrQAsHV+USODEZXcUuFaEW4GEx5YujwecWOfziWhWbQvosX+R
IuzFibHVno+7tVqAs0aWhh2TE3+VW8kqpjaDxtkNCpxanFiupl5VrKMJGGRf
lshS5sQZosKBoh+bgNwOFSqbPCeeJSX3jzs0gRHh4h+v13PigkYpf+7cRuA2
WX3qTwcH7thsfuHX4QbQmbHbPLqJAzvWtcfwizeAI+cf6INfHDh7XKdh6F89
UGQd2/noGwdW8k1RvPKwHkx+b5lWesuBzx7i0e6r+Q28UgfvXPPmwEKM3mTR
/XXA34E9k0eQAxdP17uJnf8OsmoNwut5OTBp8ND7peka0KMd5pbIwYFnKU72
m2/UAH2xjXv2LFLxLpWrgoKR1YC/VSbrWDcVX3gdVUL6UAmemh3MfvKOiu9f
crv2q6YUIP1HubLGVEyKMw5c6C4AkzkN0eN6VGxeldTcVZkPpLeLXs0HVCx0
VNHEOCsPhLC/VDm0n4rHYz1P5XvnAlP8Mc9NlIpjU68aTMy9Byy15oKcIQo+
p/iuPNbhOSDtFkfMIApW/eHHP9T/Gl0T1rEL8qfgcUHJ8H+pKWhuzXGl7CoF
G3ok/gcuvUV/65I1DrpQsM3OyqimwCzU5q2QZ3qEgiv66eplirko95vWe9vN
FCycWnWjZASj/2xsXl7NYMfj0efvmUh/R633ntx528CGQfCedSPtbWgr7Vzq
NIOM8SrT9WHlKHI9IE9t27qGyt+tbnWomkEe1Pw3XuvWkM9mKws8NIN8GwwO
CrCtoa5t/OVCnLMo1PPMA6PBVUTazs3xhDmL0nKSNue9X0Xy5uUZ1KJZNHxg
k0KU/ioS+2kYJJ02h84qU44fcV9BFmPGO9f7LCA3joiFEccVFBjpSjkStYC8
GiUTgi1W0LOCT9Sr7xdQsBfo/qy+guYyQ3hvDi+g5Fxf113UFaQ5NPPX48Qi
6leeCOCOW0aPXyie9Nu7hE6rdKZ8/bqEpneJeV3/voycU1Qs9T8toefckgI3
+paRy+ZH7JVpS6hfQ8vSaWkZuS8x7X48WkJRxy48/im3gq6hVMEW+yUku4M8
o3BrBUUaePr/XVpEgyEbawoVVlFM3o+dl/4tIpVfnq+ymasobodcy1TPItL0
2U0NPrGKknja9i9ULqL2hveCX26uooxaOMweu4gia+oOBdStorLjvOablRbR
rYGQdb8vrKHKijPkBNlFFOp/ztw1YA3VqKHMbVsWkZzA5sHWR2uobosHtzTb
IhKo9HilnUvo3tVUrPBzAWk7zcN1K2to/uzLHboXFpDOhaiLejokvNS83Fhm
v4DqV5jyqkYkvGpkGWhktoCOSz3oFzxKwpRd3F0m6gsodCHxQ5ADCW8Yd4u0
4lpAsn0Miok/Cct7q6+5vZpHchVc0sY5JIw7TOR7o+dRcRmbgF4RCVsyT1sc
vzuP0l/wVIt/JeFb/GFvgds8Kjnk/s3nJwm3vOo4vl51Hn24zsfKHyZhN9rk
rUD5eXS2iLyv8B9xvztH5vzWeaSgExefMEPCihp7KN3kefRyx7H2VRIZh/y6
kfW+eg4tf/CS0hAm420qUW3bi+dQ8RYqQ2ULGX9MSOWIy5pD60IkyjZIkDHr
bJ3Nrag5VLr2SObUDjL2+j5wZ/bOHHoaXh3dsJuMefcvZbv4zqEvwDpSdh8Z
q6xKcZvZzyHPdYX2p9XJuOa0qlL50Tl0zfnHF2NtMnasNLbX0J0j9CxoESD6
IjzSM0dqxxxSZSiZKxmRsfTiXVbMljkUmedx6IExGRfYP+Xh5Z9DugfHJMuO
kPGAfPmp6clZdJcvKbrMgoyvPWwLO9c/i4wseasenCBjgdl/n9qbZlEA32ZO
pZNknHKS0mtaNYsKGWEiH2zJWPuLCH8p0Tcp60ElrwMZ18vsVlN7N4vO7t3W
Bx3J2CVMxynj+Sy6GSGvdMSJjEmTFg8kI2eR4z+fQBVnMo467lIQFUywrUrS
wlkylv/s38/tM4tOj708FnWe6HN6xHp/11k0qbrpLM2VjC1D3mhM2s6iKQop
9cQFMh77U+jsbDqLWLV9vQH/kfEts5+PWhmzKPaiU2+AGxmL5PcVmRyYRUmp
ypdPXCTjzG0LgyWys2ilZpc9tzsZ6wbyCaqIzqIE432XHxPcOiyp/ZZ3FqlZ
H/abItj9iPJ58bUZVHHzGXPXJTLmyDkYGTExg1z0nGM1CY4XtUecfTPoT/6S
njTBijcuj/g1zqAqqSaRXuL5sv47G8crZtDzyPsd3gTbHEqAToUzSPtunUM/
Ec9kVpZrc8YM2hnifVGO4BDh0mjjpBmUji816hDxb7vW8gU/nkHmaT8d9xL5
fez+M6YUNINWXlV0zxJ6HDRgE0m9OoMcn2RKPHYh/JUuzBRzmUFb4xbG2Aj9
vAR2uj2ymUGyQUwhI0JfXm/whHpkBrW8NnJyOkPGzzvMvvnoEPkc/5NmfpqM
9/XtW6xXIubm2SubdU6R8beRDYqKcjMo6HtmDqc94Ze52vgB/hlE781poFuT
8dXVzF86bDMowZCL++pxMuaihnMmzkyjeCvRylfmRD0FjC+btU+j3oDGI2Em
ZFwosjM1s3YaiWgtlekdImNjcVoX99dpVNvdsLPZgIzddlUcxKnTKIxGkbwD
yThbX5e+++o06h+dcudWJGPmYakTIS7T6DJnLG/wTsJvZmzhvbbTyDpCwK5V
hoxnHfDCE91p5NCvcpdbjIw1/DR/cQhMI67/tjVd5yT65+YWTkfqNDL6Zzn3
gUzGdiGLmp/np5DwYsRTvETCN6LyUi53TSHSpZg/NkT/f3undIOVPoVeWYnd
SawnYYtcwVyNpCkk0FHcdPs7CQ8UTY5GR0yhsKDIUFBGwlxVWccP+06hP+Iv
7ih/IuHDfbv2FBhMoSvGN1a3xZBw5wjPmY0aU8htpcY/PZyE3SdG4twVptCO
SS8D/mASfryawiG7cQrZZl+UM7lCwo0i2zsjeiZR8qfrlwpNSPisOEXoX8Mk
Ujo76TeoS8Lz23uNDlZOIunUHjygTsKi+5/nkLIm0Z0lrqt2MiRsd1js/n/X
J1Gu2Q1Bu9k1NHhzo6aByCTqernR2EN1DdGuv/sXQZtEWdYvf48T71EFb6OX
rOUJVMToTyCT15CX23Wab/cEaj/ZUdVcvoo4TvY3p6dNoLG55igL01UkrZTj
KaA1gRTVrOQPGa8gwz1HdtjvmUDSA4VHanasoAvyw+1vJScQm+B2+zaOFfRR
QkxXj2MCseI2gBdoGTH5ggS8a8dRqWMBo2bnMnIcMH/XcWochbQKdtr+XUTB
3X8d5c3H0dkEWvTzb4sorT1E+Kr+OPp80eDpxbhFNFlXdH39znHkoOvdkKq7
iNgCjGKDh/4hlmHSnUcRCwjsHf51lO8fElJwFePYMo8KouT0hiz/oIpvndVX
CB9ynRw8Tdb8g1oNXOiFMdPIUiL5lqjkH9Qe9DDhnv00mkyTwsajY+jWrR2Z
VX+IOuFtGu8DxhC1ScMOUaZQ7IjQXt+UUXT11roxr60TyBOQxXgXh9F42OV9
Q/3DqISCNbZ3DaNBh/T45hPDaH2Vv7X2t2HE/wpZtFcNoXTz5Rj38GH0My5l
97b0QdR3fk6ggT6MXvUdoTw43Y+ORf7henpoCLlXGiQaJbOQ4nDL9J7EAfSw
TdWaOlWJrozv3rEpcAClnJLYWHW1HOXN3bRddRlAsZSIMo+Fb0iHQ76sRnUA
uYfU1owMIHRMyjfmfH0/kpDoJMdzv0GetqLqL3n6EevPKz7nM8Wg4Jd1gLBv
L5peTP1knNkBdAvauFcsWcijnX+bVvAUyEx7rVauwUJPdny6vXdmCojEXzz/
SIKFfghRSwOdpkHjHMfjQ/VdiPF5+2s93Rmw3c9yfeJiJ+q4cYJPkmsOlNyc
4YUGHehN7tfWgqRFsBy+nyOY1YL8OS/lB3KRoXvqu/kNgr9RGss3LaGHC1o6
Sz2vu5aP8krrX/fJC8HQS5dDHufkoWk20cZDRkLw87WvF4/9/YSSR+YfZZ4V
gtIRp7Xr7HORg9zDN2deCcFJ9LLtF+MDKrVgiUSIbYTb9hvuerEhDf1WXcrK
4heG47FPnCaeOKKXNMUTwiOb4DW2yFJ9VSMQK1te4sopAhXiTpcLKV8EDMfp
jR+lRaDZ/uaiYJ1AYJn139Gt9iLwkrPr8LfIaMCNb69j/haBJFLO2uniN4C5
GhWQkrcZlte0hO43ywMxTfhysecWeM67tfzkznzw7I+c2s6ILZBLuo0SyF4A
+A7EHb6etQUe9Gv3r/9QCIqLrKprR7bAmh1dHp5CCNSmyfbQ7bbCc0yPjLaR
EmBcWjosA8TghaSrUWLplSCk5JFX6eA2qDk792GvSBUw3aL+fQNZHPIae9fp
BVaBWwYO2sqi4jBjznudm001gO+LC6nG4vCvie/dYt7v4NnyYfkPGeIwz7+4
+J3yT1Ar61h6WUkCqu/+km0a8xvYbS/RbuyQgAfqG6OLK3+D16KA8WdAAir6
jfnuWv4N5LvU2sb+SUCZyk1MrlP1QOhP18bXZEkoeMbtN5JvAHESPMnTUpJw
LGHLtEJxI3i2eL578LQkHGTubU4YbwRR3J/feLhKwp4R/SKaVBNwF9xG7/WQ
hC2qHoEDd5pAgLiW75WbkrCsvkLo6dFmUOQkk2aWKAmf8Xod4OtvAXF9N+Pb
aiVh3Id7m/02tYLSot+LbxskYbT185Uho1aguIe5075NEoal1JR+y2wF5zJF
DP4bkITeulKW17zbwNlX605JLUnCy6Oq6iNpbWDdwEtAJdGh22OTbSc62kDW
PqmACgodnmH5DOxntANbVcPzk3x0eOzaT69Rng6wyiwZ+LGNDg9LDVhbaXcA
Fw/Bylw6HRpWLWmXu3cAUfPVRH8ZOtQWkeV82dABsur3n8/YTYdqSHN0PVcn
0OdxogjtpUMl52O1/uqdIHVuoc1KiQ53frweY/2MWPd8E3pLnQ5lTkb4Vfzq
BH4fODnPaNEhnS3VXpnSBUqa7GkykA5FTOtlBc53AX6WxARDjw4F54Z5bsR3
gfWjDN+nBnTI/3Tt35/vXcCf/WdDkxEdsnltbHfazAIb2AxNew/TobVDWl2e
EgtYRemFth6hw+yDxHedKQvInttfnnKUDmkH6pGDKwss/5T6cdiMDh3Fz+d+
DGaBtDkd50pzOizgXk3nesEC4Fqd5RZLOhSYfvzS5jMLhG9TOss8TocunbJx
Wc0swHRm2emcoMOSiqKHlGkWeHroAnWjFR2Kfjh658S6boBZIfRigj0SB66n
y3eDu0vs/prWdFh1x+8KSb8bbGZVdD0gmO6x3tX8VDdoHGWtyyPY1+b1qZRr
3UBE50rjR4Lr9NVPLMd0g2OXq5aCCJbfW2ti+qEb9Ow/ZLiT4NtbnPRe/egG
7mv+ga+I+9qpCxrzw92gqnqdzwQRn9L4/X3G1B7gnFv5dwPBYa30HUkSPeDi
h/hMKpFP37dP4tMaPcBMK/ZmjQUdar4zFjY83gPGKbOKzoQekU+6eRM8eoDm
i/XBdcfocOy2F/v4/R4QpHf+4AZCT103nkVmag9QPv/GgE7onXAiaTzmWw/Y
EfjEgErUY5pxYHC0qwd4Fh0QKjhIh8a7qzrAUg9ojou7Cg3p8NUm+/oI4V4Q
XbxOM5ao9zJ5umpwby9gPeLY9YVBh+ZjIV80DveC2lVRgUJAh5Qv2Zm9t3vB
df7+UQk1OrR5a/Ba5VkvsDyX4Rl2gA4/RrXH3yvoBV4qBZIVhB+dXDju7p/o
BQXHivjf7aDDIvP4gDu8fUClVWnQajsdCgFFrzbZPrBUvLC+XoIOSwWtT9+2
6wOHvQLvHthEh9tW/1o1+fQB/m0Wl7YK0KHX0G3TnVF9IJ1xt/0XL+Hnzxla
v6v7QOz6s5fekOkw2JksIqXWDxg/svjnhyRhp2k0/1XzfuAf+e/u4R5JqKyx
k1p9sR9Yl6XMXiT6eWCdxaRHcj8gwS9dot8loX5+Sk2J4ADQLiUnsGdKwqcv
tb4K7xkAmQtLxoWvJeHs/bp8l4MDAC8suGoT8yPZcTlZ4OYA+KnXq5x8TxJy
8predPw7AHRce3pmz0jCE7LWWJl7EKTV7m7bbyMJ0xhOazTpQVBmJvpV85gk
NPHxvv7BahBorGvIfa9FzJuBJB9K6SDYVG/4QEpAEg6R3+Y1dw0CO7qZUyGH
JFQXy5lLXxwE4se+t4gtScBOs0pPC8Uh4Ngay87oJebnl4lLyfFDYGWBPMH2
XgJ6ty9l+eYOAc/Xm5xHX0rAqjnquMmvIdDKLaCdGC0B3RRE3eY4hkH+oN91
Gz8JmBvPcDH0GAbXLKNF9RgSUM8rwnHEcARMDVhmad0Th9GPEp8Xnx4B3s/+
Woq4iMOh9Desx/4jwIY3gHHTUByG9RbaaXwcAe0nz3cts4vDetM+6zDxUeBh
G7sp0nMbdNp5wExhdhQonGsT4mWKwVx98JhtwxiIj430yBAVg1yORr8ad44B
DqtDui0TW2F6rO2RgFNj4Blb/vnap1vhNDX40M+aMRAtTZ3aM7UF3mY1Mj1e
/gHH1RutooNEYWf+of+8i/6AP9WXTNisRKF6BI72b/gDnplW2FJ3icJxvbTh
UM6/IDfVV//nz83Q7u31By9d/wK3ZOECz42bobqXdFv9/n9g5cHUgf7QTXCB
qpa/xXEc6Hu8aXm7XQgme0x9f+o2Ds57KWqVjwpC866MHkm/cfBJwbrb670g
zMqj88pFjoOiAaOSxxqC0NmV116pbBz0pO2eLDwoAOt/dlEOy08Arzhn3lrz
9TArPtjUf3ICvE/Syp/bwwWrBYMH15EmQYGcvL1YFCccuBfk/5xvEqR/XXdQ
f4EDbr0WmP5NbhKMT5YkvCimwhCbW1w89pNgoCQvKFSLHTqI+eOY6kmgxGxO
jRRZBuufeSq+fzUFHKZFgu2uN4GLL5zW91nOAPl14oHDmzhwuM+ThPDTM2A2
+9nuWBYHzjT9IafmPgMemk+tcKRx4r+rKjrhd2fA4+nnynTiK+XCSR4P1aIZ
wC/9wU/dgxe7CGX/DpOcBU5Cs9wvr2/AzsFr0QfGZoF5HR/1ipEItnOJE7tz
cx60OqWvGZ2TwnePeqntT1gCG7c3/SfptRdThKIGAhZXAf5Bid3ArY4F/vrz
C3CuAXjvzeUfsupYsuKc8ivBNcA3KMXhp6+Ota9pBlfsWgNPDRDPi9vq2Kev
d/sG+zXgih9lbVtRx38/7jvz4usa0HelHgsd08Bj8kOXHPVJcMVw8E5ngRae
3tQR9NaYBFsVj86ON2rhJUrdk+ljJNhluhQ2NKmFaV2FX4LtSfCQ2qbfQfLa
WDbiwYa33iQ4nDK96WKsNnZcUn4/lUaCnm6BUZluADdVB40HriNDPJX0n9JN
iCO1E/UshMkwJM91VT0c4mPvP8ZtFyPDPrWqrTvjIf4R3atbJk+GjuQ2ofKP
EJed0nnCqU+G+TfSLg4OQJw7t6wTeo0Mjx58djVKXwdfcRGKsb5Nhg3/LPpE
jungfR07x+RDyfA7ahK/ZauDM0uso6tjyLD02NYN1Cs6OPl+3gjvBzL8KR+t
XvZMB0dLXYl4MEyGX2dE3EiTOtg8+t6Q/TgZbj9JM/62pIMFuF9qKc6RYTIt
RN6FysDhf38N/qSwwbE/GtPWIgwcnL9HU0CCDYpxpXBUaTKw7i6DRz0ybNBd
xvJAjB4Dsz2zG8jezQYt6JK+uiYM7B94/6GZBhs873bbVNuegb2OjPZFWrJB
gW9aPikBDKxUwqZ+xpYN+p5///ziHQaeVBJ9cMCJDS65c80IPWBgN1EjtcZL
bLA5pVRmIZGBnfuT72+6zwYft1euSRQwsPSJ4p7BCDYo+SKpog4zcE9Vg0pe
HBsMt/b65VDOwHZZlJ4TKWxQdZiaub6egS38HJXjvrJBJZU4Vt4oA0cnCnHM
VRL5rPmxD48zcCMqazD7yQZ1yVpm8zMMbEnZ6cnXwQY7S7KyP6wR+2U6dF16
2aDHQyl7ewoTNxk+ECofZoM7o2cvDXMx8Yn7Ux9uzLLBsLY3hIGZOPbd69sd
y2zQuyVKsmgjEzf/Om6mzs4O7S5Ruj5vZmIr4aLJqXXs8BYX2ctKkonjVN1K
TIXZ4Yuq5bFJaSZutZZ4nLGVHVpGWYDzckxs/Sxw79kd7FCg4977UQVi/xdl
8rc97JCVybw4t5eJ23qHfkoos8Pd4vy6XUpMbCN32L2VwQ5x64GLDHUmTji4
BlSM2CF73dDpz5pM3H7h/brII+ww8J11uiBgYtv3G98dtmGHZtbdnkeZTPz0
d7l/miM7ZMo2RqnqMXHnjI8J53l22Fdz0GBRn4m3ieza5nSRHVJMO62iDZnY
Tr3zD/Zkh6EOzETeg8TzNg8/i10juB522xxi4i5/xn3fW+wwWyp7JtiYiSWe
T9s0hbDDvb130kIPM7HD1+RdSg/Y4bRORe1ZEyZO6j+x/DCKHVoFPTiw7QgT
d3Py1PyJZ4dHg9enZxBMl/8cf/AFO6xSiGIXNmViR+OLrm9S2OGrOX/e4wS/
cJPUoLxjh/+cDWLcCe55+Jt2KocdJoffuOJIMP1DUOvnQnb4+V7DlV0En25Q
SRMtYYdRVJ7zP4jzX80N+1ytYIdDGWuShgT3bU4wqv/BDudxuvsTIj5pTZPN
exsIfYJlZEqI+J3sSMP329jh1V8JgiVEfq9uZOeNdLPD7tsnaU+I/PtfOIUY
DLFDNf7qNn1CH5lS4ROv/rLD4kl3q2pCP+fBClnyDDusMBg3lzFg4mRuvznb
JcIP6rSk44T+gzt3lxeQKbD78VNee6I+ciZd0Zu4KHD+QPoFTR0mPuf+yPkK
PwVqvj36+J82E6c8Zir/EqJAZtL3I95EvYc+zlAVtlBg/H8BVxvVmPj8gtXr
QVkK3HM+5YgA4Ze0LbyeugoU2GkS/PqfIhOPaBXrPleiwI93zmU9383ELrfo
fdY6xPk1d/beliH2v6r/8MmAAkN+6plk05l4tCz4tpAJBY7I8vyXs42JL/CM
0n9YU2C7k96asjCx7lNA4TlFgd/8y2RqiP5wGbo7YHCWAk+8vmejzMfEZ0vl
0r5cpsDWXUuH77Iz8cD++XurPhRoLvjg06VVBnZ6Uf6fxg0KDObRuKewwMCO
Ac57c8IoUGb46A/pvwzc/eeA4ORjCnThaR2zHWJgBxvqjMITCtyWk/PbpYeY
B2qv8lJeE/mdPWm91sDAVlPdIKGYAhcfiU7zFzJw86n3ki3fKLAsq3u5+wPR
/z9vsAtXU2BHr+zjO+kMbJ4hXv6giQI5q/zLjYh5ZHrW1uT2OAVOXzi9K/ka
A+u3Ndu40KmQ1Fo7kbiPgUuNUrTfyFGhGO9ethA5Yl7mXZXoU6BCPtfPRoxt
DKwTJdxnq0GFk9vb/8lwM7DmEXPXo+ZUeGchtDi9nZjvX2t9VIOpsHdP4+Ew
Xx38fu+zk55hVJjGxvvw/H86WDHJTSv7MRXuSs8aEnLQwbuv85F3PaNCJ3VB
2wZdHSyncihEPI8Kpc3PdC7w6GDxt2XRHCNU+O+nm2fuQ4jNn+XlV41TYZXn
xF22AIhDI9Law+eo0Ez5Y8qG/yCe9gunb6JyQP8L1728DSGuMrbMlJXggNlv
93NUzgPs9be/1NCSA44DZbN977Vxek/TEK8tB6x7S17mCdbG3Y2VPL9Oc8Dq
sNqks9ba2BhlHLW6xAHHVoVmXpK1Mf2hZ8f5MA6of1YqRv6gFv6+lzoTWsIB
zz2/J67zVQOzycxtOlLJAQu9Z8mSDzWwquiwuuBPDngnkvtFgI0GfsH2/UZ8
BwdEHe2ueVPq2Pt3JG/6PAe0GFd7JLhVHUt7Skt/V+CETxsWck3MVbFfHtNs
XTwn3KWb1cbmqIT32fwct3/OCSnzV36t0JXwyJpNeNYbTlgpcFksqHc/tjbw
qjz6kROa/9WMUT29H6s3poDI75xQ4K+N7T7bfXh+im/XZhIX5LI0CXDTUMRe
e5opUme4YDGeqjBgyGKF304vLrtywbClmGqLNzJ4wGsCfLvEBY9R2Mev88hg
i2Ka3xl/LugWp2si9ksaKx3WmngTwwXPeda9SDxKx1MuLzp2VXHBrULHl9OO
iGL35Au5ynu4IatESTnvxATqrN0Sxa9M8HKW1W3DAXR4oerygCY3hJ3lOxqe
/kbyxjv2Rh8kOJeubJzcCfom+t/OnOGGOOH26T3RJHhcy/75xwRuSHFyOJTo
uhFq1x8N20ejwebgmG3XH8hBXjYVR4V+Gqy39yoe9tGA+VfZzQZGadA0zLpk
ak4DOv+pZT6dpEH+Rt10Gy9NiJvPbecn8UCFzPkgwyta8PK7uKE/ojyw0KFJ
0/MKgK02q24ZpjxwCNxhlpTowJRPpX67inhgfsNcSsykHhwKX98bVM4Dp2zk
VJbP6cP/ARQFWmw=
          "]], 
         LineBox[{{4.975669561077634, 44.82019700499395}, {4.97597484304992, 
          44.69242761655718}, {4.979406979173985, 43.2468491887802}, {
          4.986271251422112, 40.32833739866436}, {4.989703387546176, 
          38.85542194222107}, {4.99313552367024, 37.37341270871883}, {
          4.996567659794303, 35.88231964353086}, {4.9999997959183675`, 
          34.38215309201884}}]}, 
        Annotation[#, "Charting`Private`Tag$5216#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Thickness[0.02]], 
         LineBox[CompressedData["
1:eJwVl3k8VN8bx2fGmnWGSEpmkLJmJ9u5RllaJEQhO0USKspWhERR2iRKSCVK
KiFf58iaZN+3oSQVknWMZX7398/M6/269zz383ye5znnXprHGRtvEoFAuIX/
/P8/8ufBWTZbFGmcqXz1YE8tGA8XXxhYFUWfdDq5y0NrgRWZsfRhWRQdSZ3M
+JNfC6i7A9fOzImirrluvWhKHfiUmMo7Mi6KbArL+E4z6gCvas829FUU3fUa
NFmNbAB3zrntv/xQFMVH+adcrf4CXhLP5hJ0RZEDmRCSotIG9GzzuR9oiqKS
gv98hfe1gbrc0ZPqaqIotUCUN8mnDYyYW6t4KIiiVVkx2rnHbUA8WaWkeguu
z9uunIvSDmIkJ+rjCaLo1s5m1R+z7eCo5vE/Ao0iyM1JhTvsdScYj71z8Gmd
CKo8dVh3sLETnO3+8tqoWgRxGh1xUxvvBMkX9c8FVIgg81tthwq3doFquGmt
5ZUIYgwP3JhJ6AKqB9qFbt8WQYsKb3/buHQDLm9zjc3HRdDYmOcVZVYPaHdR
d/hzTARtcM7JiKb0gkdHt0T8Zy+CaOGl5KqdvUDnwN9ad2sR9EfI99uafS/w
0bx/LN9UBPnklVNOFPeCBuLPywaKIqguKtS8xKsPXH8U33J8iYK8ZRydtd/3
g6NpgfO75ino8u3YNdPP/UAu1XEz6R8FfegdD9Uc6gf/xal65v2moOzW3fAt
5wCY9u9enB7CuVqfpG4zAKwN5LddrqEgtTd6tn3jA0C0t9Y/+xYF8U1kSr+b
HwRI6UlCbDIFGXIcfLrIMQT8L0Xk+iRRkILs+nOK6BCok9ccVIyjoIv6Fcst
akMg7HzW/rcXKOiAcoevt98Q+CYSrljjSkESxd+Li7qGQIqPvVmeMwXZt03a
OHwbAobl6h4Jxygonvgpv216CNxzn3hwwJaCJp49OITxDIN9RUc2dJlREKnf
UmhNexgUH1Sb+KFCQSVsfe83icPA9Qk/Z4MiBU1zv8g6c2cYCCyMS+fvoKDF
5Nwvq5nDwCcj0yGARkGBQ52VMUXDQPIPX/3iRgqyYa1UaXUMg3rj8W+9FAqy
o1+leQwMg3OpVevlQhSUsrFMyPn7MGjefUHnEi8FuRjOur+bHQYxCT+e8qyS
0VaP2cxpIQbYNYiqfjHJCJO5t/WCGAMM7soY+rJARn6A1vhlCwPo9NiI3fxL
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
s5ENu+/b+QOSJZTZqz+3YuePS+rn8P+A4dzRKdEPpbByr4CAxNkx+EmNd7/r
Gyls/dSn7KC+MZjan2q9pV4Kiw/z48eejcHJvV6TyrNSWNr98sFB+hiM83Ax
LTTbhpW3OV4SD/sOna3uLvZObMPWe1+9XXP7Dh9NveU9t7oNo4+QJsbMv8NB
8Z2yE8LS2JfpfOu3Yt+hrY6FlKOONDbIv0KzfvMNfnro1OMULY2x9z6suTYx
CpW2U7preajYnoN/mYEto7Dz4lSuOZmKJdiZqhwtGYV82UoH3kpQMbLnn7vy
saNQuaIp1FyBislcNjhRLT0KVQ+7JbtY4uvLBzas2Y9AslUomxZHxV7lP91d
bzAClXsWu6uvUzGJh2d8b1FH4J3dPOcs7lCx7iXu1P2dDMj/7YrMcjYV2x5u
T85kDcN684B9s5VUjOn0+4x6zTA0Lue0yK2lYk2GUS21N4Zh6eZLNrpNVOzc
+tPkaeow5Ij4/obdS8U+RS8IYOZDULc06a7oPyp2z+Oafyd5CBY32C3UL1Ix
X1OpppP9g7BQYeGF0yqeD9fepFunByF9n7QOlYeGjf3o/b1ddxC2+E89thag
YaV1/vvKCYMw+uPWK64UGuaacGfD99sDMDkprn/TFhqm4bvTN/T4AKyN2zeK
pGkY976KBv4dAzCpNCHeXI6GveIfu6pV3g/dB9baJpVp2GqyJnf8SB8cjrQJ
uWVIw1rP1HtL5vdBfYJ0GA2jYTnWTrWvzvbBUw5fT94wpWH7RK7E9nD3QQ0g
psq0pGHb5sTHTrX2QnJVWNriARo225FvSkjvha6yTmKth2jYg7vtJAWVXni0
9EeA6BEa5h/i4/HfYg/sPPWHEeFAwzAHVtVh1AO37pK7jo7RsI16ybTxaz2w
yfav0bATDZuQkIkOs+2BxeQq2HWchlUsvx8RkuqBJZKyg3muNCyl3xLLGe+G
Jsbvjx92p2EeH4ce6xZ1Q/1lFeEuDxqmkxHE/nKxG94Tc/qo7kXD+CK5XN1M
u6Efvo2c8KZhQ8cfVM4LdMPssuhd531oWJGxyrZr3V1QoeHmDacTNCxWuipS
KqsLfoi6LCJ5koYdJRwZeuPbBSX3Zlwrwll5dMLQTLMLksP2VW7zpWGETxEZ
/audsIAiGOGFc0c2eTWgrhPu0YpJjsY570quE8fNTvhnyKvqPM5hXnof7x/r
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
eT9iWHjAjrdfpjmxOeeduqsnzbD/AQhla6Q=
          "]], 
         LineBox[{{4.101375320460095, 44.82019700499395}, {4.10398613820358, 
          43.79898874459944}, {4.128768744686354, 33.76680598995392}, {
          4.178333957651903, 12.36092440997814}, {4.18137088326913, 
          10.991827931136072`}, {4.184407808886356, 9.616150233904733}, {
          4.19048166012081, 6.845096556320868}, {4.2026293625897155`, 
          1.224527654674887}, {4.226924767527528, -10.327591826248693`}, {
          4.275515577403153, -34.649389203278474`}, {
          4.290113995907156, -42.64785434620923}}]}, 
        Annotation[#, "Charting`Private`Tag$5216#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-5, 5}, {-42.64785434620923, 44.82019700499395}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{"3", " ", "x"}], "/", "4"}]], " ", 
           RowBox[{"cos", "(", 
             FractionBox[
              RowBox[{
                SqrtBox["43"], " ", "x"}], "4"], ")"}]}], "-", 
         RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{"3", " ", "x"}], "/", "4"}]], " ", 
           RowBox[{"sin", "(", 
             FractionBox[
              RowBox[{
                SqrtBox["43"], " ", "x"}], "4"], ")"}]}]}], 
       RowBox[{
         RowBox[{"3", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{"3", " ", "x"}], "/", "4"}]], " ", 
           RowBox[{"sin", "(", 
             FractionBox[
              RowBox[{
                SqrtBox["43"], " ", "x"}], "4"], ")"}]}], "+", 
         RowBox[{"6", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{"3", " ", "x"}], "/", "4"}]], " ", 
           RowBox[{"cos", "(", 
             FractionBox[
              RowBox[{
                SqrtBox["43"], " ", "x"}], "4"], ")"}]}]}], 
       RowBox[{
         RowBox[{"7", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{"3", " ", "x"}], "/", "4"}]], " ", 
           RowBox[{"cos", "(", 
             FractionBox[
              RowBox[{
                SqrtBox["43"], " ", "x"}], "4"], ")"}]}], "-", 
         RowBox[{"10", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{"3", " ", "x"}], "/", "4"}]], " ", 
           RowBox[{"sin", "(", 
             FractionBox[
              RowBox[{
                SqrtBox["43"], " ", "x"}], "4"], ")"}]}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[0.36]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[0.36]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.5, 0, 0.5]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.02`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.874473144448029*^9},ExpressionUUID->"e5d751a1-0a8d-4990-ba79-\
e34c558461a7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "Ques", " ", "5.", " ", "Solve", " ", "Second", " ", "order", " ", 
       "differential", " ", "equation", " ", 
       RowBox[{"y", "''"}]}], "-", 
      RowBox[{"2", 
       RowBox[{"y", "'"}]}], "+", "y"}], "=", 
     RowBox[{
     "0", "and", " ", "plot", " ", "its", " ", "five", "  ", "Solutions"}]}], 
    "\[IndentingNewLine]", 
    RowBox[{"Solution", ":"}]}], "Subsection"]}]], "Input",
 CellChangeTimes->{{3.8744731535764027`*^9, 
  3.8744731744134884`*^9}},ExpressionUUID->"58d22677-198c-47fb-b833-\
4b912ef4e337"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
      RowBox[{"2", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
      RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", "0.5"}]}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "3"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", "3"}]}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", 
      RowBox[{"-", "2"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol3", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "7"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol4", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", "6"}]}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", "1"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Sol5", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", 
    RowBox[{"Sol", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], "\[Rule]", 
      RowBox[{"2", "/", "3"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Sol1", ",", "Sol2", ",", "Sol3", ",", "Sol4", ",", "Sol5"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", 
        RowBox[{"Thickness", "[", "0.02", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Yellow", ",", 
        RowBox[{"Thickness", "[", "0.03", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", 
        RowBox[{"Thickness", "[", "0.03", "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Sol1", ",", "Sol2", ",", "Sol3"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.874473183020958*^9, 3.8744733665601983`*^9}, {
  3.874473401248437*^9, 
  3.8744734918702374`*^9}},ExpressionUUID->"e90aafe1-8fb8-4091-a10e-\
b1ad3508ff5b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], " ", "x", " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8744734939424314`*^9},ExpressionUUID->"d00670fb-30e1-4a61-af8f-\
c902163d690e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "0.5`"}], " ", 
   SuperscriptBox["\[ExponentialE]", "x"]}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]}]], "Output",
 CellChangeTimes->{
  3.87447349394343*^9},ExpressionUUID->"f14a634e-1bf9-4efe-82f5-3662b47d3ed3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "3"}], " ", 
   SuperscriptBox["\[ExponentialE]", "x"]}], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]}]], "Output",
 CellChangeTimes->{
  3.8744734939444256`*^9},ExpressionUUID->"48ba4a35-065c-4d45-9f57-\
9ce709599740"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", "x"]}], "+", 
  RowBox[{"7", " ", 
   SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]}]], "Output",
 CellChangeTimes->{
  3.874473493945923*^9},ExpressionUUID->"3ed02920-c77f-450b-9461-\
7c78fdb3ea9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "6"}], " ", 
   SuperscriptBox["\[ExponentialE]", "x"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]}]], "Output",
 CellChangeTimes->{
  3.8744734939471674`*^9},ExpressionUUID->"bbed9932-aff4-44b8-a0d6-\
c1b41ef77d9a"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", "x"], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}], "3"]}]], "Output",
 CellChangeTimes->{
  3.8744734939493985`*^9},ExpressionUUID->"a4414528-6d60-4d67-b3a1-\
a9605758b8ac"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Thickness[0.01]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$5382#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwBoQRe+yFib1JlAgAAAEkAAAACAAAALj8W6v///78M7QWMqlLBP2/5I4j5
+v+/yMgDPTdNwT+wszEm8/X/v37WHMu+R8E/MihNYubr/7+E3NxzvjzBPzcR
hNrM1/+/+IP4q38mwT9A4/HKma//vwQe1VUH+cA/UofNqzNf/7+gTbJKGJrA
P3fPhG1nvv6/uE/hDUWXvz+M63bX9Lj+v6Ci1dJ6iL8/ogdpQYKz/r/IgBbZ
onm/P8w/TRWdqP6/cJ/hislbvz8isBW90pL+v6zJjKxwH78/zpCmDD5n/r8o
LL4jH6S+PyZSyKsUEP6/iAmE/MWivT/U1AvqwWH9v6Bc+th3c7s/gWS1vqtc
/b8wasUuOWK7Py70XpOVV/2/qOe6xOxQuz+IE7I8aU39vyCHH5UqLrs/PVJY
jxA5/b8Y0/sCAOi6P6bPpDRfEP2/MLRF4gtZuj94yj1//L78vzCGwoV1MLk/
HcBvFDcc/L9gEUup9LK2P8wSNXQ6F/y/CDUHB3aetj96ZfrTPRL8vwDRF2fo
ibY/1gqFk0QI/L+wwsUQoGC2P5BVmhJS9Pu/KC2QO1oNtj8D68QQbcz7v3Ao
ZW7zY7U/6RUaDaN8+7+oXjmehAW0P7VrxAUP3fq/IGaxK3IYsT84IG4xptf6
v0hJXkbk/bA/utQXXT3S+r8woXF0QuOwP8A9a7Rrx/q/gEIC4cKtsD/KDxJj
yLH6v6jpPNbSQbA/4LNfwIGG+r8gTqrpS8yuPwr8+nr0L/q/cOvCQZw+qz9g
jDHw2YL5v3BfSK99oqM/+JJ7iL8/+L8AHd7LSgJ8P6MO3hmY4fa/UMVzqTAi
ob+cSjFy04n1v9hMcA7mf7S/gmxheClJ9L+gjw0RjbnAv3sDqndy7fK/NPE8
vVjdyL9hgM8k1qjxv3KvYnZi0tC/lb3lmJxq8L8st6hxx77Vv7rfKAysIu6/
RBbf/IHd278jEEBCVJ7rv8LiHORFMuG/siqIauLj6L/ALO110Dvlv9/FsSA2
Nua/7TlMl2LD6b/lLJUyv7bjv9lvy0qOje6/EX6pNi4B4b8YsQ6z9zfyvyw2
7yyl89y/dGWVbUdT9b+DRO3QuXjXv7ISu3FxIfm/FVSukFkX0r/jhX8dyVz9
v7L2xQ/IJMq/Os0FeermAMCl2+WN6YS+vxwftQMWnAPAXVEctNtjpL+qHkUM
YHMGwLkKe9XCdaM/ho/ev7mPCcA14gEegVi/PzD2vgAnVw3AI/C7+TrCyT8F
GlM+0aQQwEmj2c1OWNI/pmtO1aIJE8BFTRID9bXXPyVcxo+RrBXAj1/XgDC3
3D9vEHKRuWoYwMdOHQ1QEuE/jO2jQgq8G8DtIRV+0prjP5OgOdkgMB/AdXQr
YY8W5j+oEsw9rnghwNfcEFJmyOg/7zt05rO8I8BgeTznB0zrP+lFwGiAFibA
wys3isMF7j8kH3skFuwowCYJvOikSPA/zjOp1pHdK8AdvGtFBYjxP14bMDPk
Di/AAPoCqXLi8j9Qbz1RRXMxwPdRvV7FJfQ/QrZZ6o9wM8DbNF8bJYT1P3qW
Yr8O1TXAGC2PoV5l9j9Sf89IJos3wF40Z2Q=
          "]]}, Annotation[#, "Charting`Private`Tag$5382#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Thickness[0.02]], 
         LineBox[CompressedData["
1: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
cFLPWLCav8Ju4wQlTZz31rVgk/H/mkh7JQ==
          "]]}, Annotation[#, "Charting`Private`Tag$5382#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 1, 0], 
          Thickness[0.03]], 
         LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAALj8W6v///7/V44G4qlLxv2/5I4j5
+v+/uT8vA25X8b+wszEm8/X/v/zSP5YyXPG/MihNYubr/7+Co+KWv2XxvzcR
hNrM1/+/DcObC+l48b9A4/HKma//v3jfiQ56n/G/UofNqzNf/78sIj7clu3x
v3fPhG1nvv6/3GG17s6N8r/U1AvqwWH9v5KNAC49/PO/HcBvFDcc/L/+KFgF
SGv1v7VrxAUP3fq/mjdhexPs9r9gjDHw2YL5v+opN6ZXq/i/+JJ7iL8/+L/m
KX8ztWr6v6MO3hmY4fa/Ryb32Hhy/L+cSjFy04n1v0wdnrSXlv6/gmxheClJ
9L+iz8QhAl0AwHsDqndy7fK/lUD2j+KaAcBhgM8k1qjxv+3eMFXE2ALAlb3l
mJxq8L9koouwhiUEwLrfKAysIu6/tnRBTNCnBcAjEEBCVJ7rv4CnM7mDKQfA
siqIauLj6L/C/vdDBekIwN/FsSA2Nua/sBplqiDACsDlLJUyv7bjvy7Rt8nE
lQzAEX6pNi4B4b91nLCYYrYOwCw27yyl89y/kxbGSvpqEMCDRO3QuXjXv4WV
D2j2pRHAFVSukFkX0r+ZGgxdUPESwLL2xQ/IJMq/hN4b6Xg7FMCl2+WN6YS+
v792nWbfuRXAXVEctNtjpL9Jtje0UDcXwLkKe9XCdaM/xoCSPJbFGMA14gEe
gVi/P6wOdhuUkhrAI/C7+TrCyT8nSKJSml0cwEmj2c1OWNI/Fd6T94NwHsBF
TRID9bXXP0ZyeQvVTiDAj1/XgDC33D8vDRUJs2MhwMdOHQ1QEuE/Dqu4Gauj
IsDtIRV+0prjP/9GQc344SPAdXQrYY8W5j9qzsC1eC0lwNfcEFJmyOg/iuvC
Fj+sJsBgeTznB0zrP5KECEVEKCjAwys3isMF7j+0d1ZYpN4pwCYJvOikSPA/
JJ9TxDGSK8AdvGtFBYjxPwBcR60lVy3AAPoCqXLi8j/GRK8CF2EvwPdRvV7F
JfQ/7slknkKzMMDbNF8bJYT1P0siZwkJ3THAcFcQESLc9j/sAJtz8hMzwBmU
5FgEHfg/ec8R3WxHNMCuW6Cn83j5P8bGmFDUqDXAVz1/SMi9+j+ybnZGeQY3
wJzFQ1h0Mvs/Un/PSCaLN8CkqcHG
          "]]}, Annotation[#, "Charting`Private`Tag$5382#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Thickness[0.03]], 
         LineBox[CompressedData["
1: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
B07iSCs=
          "]]}, Annotation[#, "Charting`Private`Tag$5382#5"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2, 2}, {-23.54355292383054, 21.669582125045615`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"3", " ", 
           SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}], "-", 
         RowBox[{"0.5`", " ", 
           SuperscriptBox["\[ExponentialE]", "x"]}]}], 
       RowBox[{
         RowBox[{"-", 
           RowBox[{
             RowBox[{"2"}], " ", 
             SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]}], "-", 
         RowBox[{"3", " ", 
           SuperscriptBox["\[ExponentialE]", "x"]}]}], 
       RowBox[{
         RowBox[{"7", " ", 
           SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}], "-", 
         SuperscriptBox["\[ExponentialE]", "x"]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[0.36]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Thickness[0.36]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.5, 0, 0.5]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.03`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.5, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.03`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8744734940342007`*^9},ExpressionUUID->"751b3082-4a0d-4a67-8eb6-\
b16ac897ebd8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1141.2, 568.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (August 22, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8ac39de9-cd41-40f5-9f05-b598b8cc0a4f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 365, 9, 222, "Title",ExpressionUUID->"9c2ecbc1-e9ff-4667-b790-50dbbb469cdb"],
Cell[CellGroupData[{
Cell[970, 35, 425, 8, 151, "Section",ExpressionUUID->"79233050-2241-4764-8afe-94ba47d3271c"],
Cell[CellGroupData[{
Cell[1420, 47, 397, 11, 28, "Input",ExpressionUUID->"13d5f5c0-f9f3-4230-8498-9ad290ee026a"],
Cell[1820, 60, 444, 14, 32, "Output",ExpressionUUID->"8af913b4-4121-4cf7-a7b1-3b30cec6bdce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2301, 79, 365, 6, 73, "Subsubsection",ExpressionUUID->"d1f1319c-efe0-4713-997e-1df84ecca47b"],
Cell[2669, 87, 152, 3, 28, "Input",ExpressionUUID->"a5662274-641a-416d-b971-d5a3bcae3853"],
Cell[CellGroupData[{
Cell[2846, 94, 526, 15, 28, "Input",ExpressionUUID->"f56837fc-8bb5-461d-936c-2a85a8d579b0"],
Cell[3375, 111, 564, 17, 35, "Output",ExpressionUUID->"d5baad6e-4958-4d0b-a01c-422a5df66819"]
}, Open  ]],
Cell[3954, 131, 618, 17, 73, "Input",ExpressionUUID->"f786a608-6301-4523-b6d8-838acd610288"],
Cell[CellGroupData[{
Cell[4597, 152, 519, 16, 28, "Input",ExpressionUUID->"c0074457-5874-4ab4-86ad-75839c47d826"],
Cell[5119, 170, 876, 28, 49, "Output",ExpressionUUID->"65578497-0073-44be-ac84-675ba5dc247a"]
}, Open  ]],
Cell[6010, 201, 611, 17, 96, "Input",ExpressionUUID->"b9da07a9-de53-42dd-a92d-14053f473ef5"],
Cell[CellGroupData[{
Cell[6646, 222, 474, 14, 30, "Input",ExpressionUUID->"6534a31a-1984-4228-b18e-7ac8d3ea0450"],
Cell[7123, 238, 472, 14, 30, "Output",ExpressionUUID->"af192286-6c57-48a8-9cab-1f1e73be2820"]
}, Open  ]],
Cell[7610, 255, 610, 17, 77, "Input",ExpressionUUID->"b3020f3d-c099-4ef2-8452-49d8d7e16356"],
Cell[CellGroupData[{
Cell[8245, 276, 499, 15, 30, "Input",ExpressionUUID->"c83ad20b-833a-41fc-8eeb-485a4fda1438"],
Cell[8747, 293, 662, 20, 34, "Output",ExpressionUUID->"030ab410-a76b-4019-9ade-b99888e7c820"]
}, Open  ]],
Cell[9424, 316, 960, 25, 146, "Input",ExpressionUUID->"f54f4cce-3b69-4ae5-93a8-2862760d1331"],
Cell[CellGroupData[{
Cell[10409, 345, 2560, 74, 145, "Input",ExpressionUUID->"9f0ee3f2-06e0-4184-8774-e719b2b87b03"],
Cell[12972, 421, 446, 14, 30, "Output",ExpressionUUID->"981457ad-92d3-417a-b985-0dfb81a8fee5"],
Cell[13421, 437, 238, 7, 30, "Output",ExpressionUUID->"1bbd4084-9b95-48c8-bfb3-53fb5875eab6"],
Cell[13662, 446, 260, 8, 46, "Output",ExpressionUUID->"77d6a853-11be-4f77-ad47-8f073c13d1ed"],
Cell[13925, 456, 255, 8, 30, "Output",ExpressionUUID->"c61f35dd-61c3-4d33-8f10-a1c1cfb1a1fc"],
Cell[14183, 466, 98941, 1705, 239, "Output",ExpressionUUID->"9e37f4fd-c74d-4904-822b-8e040105b3bd"]
}, Open  ]],
Cell[113139, 2174, 701, 19, 77, "Input",ExpressionUUID->"72cf425f-54a4-42fe-a934-6f6c352b82a5"],
Cell[CellGroupData[{
Cell[113865, 2197, 2450, 74, 107, "Input",ExpressionUUID->"4999c429-5fb8-4e37-ab65-2411d03b60da"],
Cell[116318, 2273, 568, 17, 34, "Output",ExpressionUUID->"d19c7ea0-655b-4672-abfa-26b1b986b502"],
Cell[116889, 2292, 245, 6, 30, "Output",ExpressionUUID->"e86f2256-e59f-40ba-b0bf-a335ab64d673"],
Cell[117137, 2300, 347, 10, 30, "Output",ExpressionUUID->"67636a70-5e79-4272-aebd-f73dea7e556e"],
Cell[117487, 2312, 415, 13, 45, "Output",ExpressionUUID->"d83d1ee1-2b32-45ee-bd0d-2d5e1986b69c"],
Cell[117905, 2327, 29244, 567, 246, "Output",ExpressionUUID->"e3897c85-bb17-4e26-8271-0cf4ecd18788"]
}, Open  ]],
Cell[147164, 2897, 2541, 76, 188, "Input",ExpressionUUID->"5aa88d50-f469-4966-a553-a898169f65cb"],
Cell[CellGroupData[{
Cell[149730, 2977, 3190, 95, 126, "Input",ExpressionUUID->"219d4a50-eeb0-46bb-ace2-c729016a7ffe"],
Cell[152923, 3074, 736, 22, 34, "Output",ExpressionUUID->"ccce50c5-0cd0-4efd-b6ca-a3a46fc906ad"],
Cell[153662, 3098, 529, 16, 30, "Output",ExpressionUUID->"e37769de-44b4-494a-a444-c79d6f934a1f"],
Cell[154194, 3116, 536, 16, 30, "Output",ExpressionUUID->"d272e899-59d9-4cd7-9e28-04390331498c"],
Cell[154733, 3134, 554, 17, 30, "Output",ExpressionUUID->"42fdccb5-477d-4967-a1eb-21016c311c8d"],
Cell[155290, 3153, 556, 17, 30, "Output",ExpressionUUID->"5e15a281-4c64-49f1-b02e-5748fa5ce87c"],
Cell[155849, 3172, 46803, 882, 241, "Output",ExpressionUUID->"a02575ca-8532-45cf-bd4a-b8916bbdfe32"]
}, Open  ]],
Cell[202667, 4057, 672, 19, 77, "Input",ExpressionUUID->"6b68a7fc-7869-4132-9cbc-ee3334d378b6"],
Cell[CellGroupData[{
Cell[203364, 4080, 2491, 76, 107, "Input",ExpressionUUID->"29f40e09-aa12-4077-a6be-d1ff8f6b75a4"],
Cell[205858, 4158, 814, 26, 50, "Output",ExpressionUUID->"4d4e3a23-9aaa-407d-96a8-005c182801b2"],
Cell[206675, 4186, 584, 20, 50, "Output",ExpressionUUID->"095a1c7e-a377-4ab8-bd6d-eea57cd0cab7"],
Cell[207262, 4208, 592, 20, 50, "Output",ExpressionUUID->"5202dd25-5de6-42c1-aecd-6e34a315e39b"],
Cell[207857, 4230, 593, 20, 50, "Output",ExpressionUUID->"14e5ec71-e0d0-45cf-8293-d5bec409f099"],
Cell[208453, 4252, 60215, 1088, 240, "Output",ExpressionUUID->"e5d751a1-0a8d-4990-ba79-e34c558461a7"]
}, Open  ]],
Cell[268683, 5343, 646, 18, 77, "Input",ExpressionUUID->"58d22677-198c-47fb-b833-4b912ef4e337"],
Cell[CellGroupData[{
Cell[269354, 5365, 3607, 108, 145, "Input",ExpressionUUID->"e90aafe1-8fb8-4091-a10e-b1ad3508ff5b"],
Cell[272964, 5475, 472, 14, 30, "Output",ExpressionUUID->"d00670fb-30e1-4a61-af8f-c902163d690e"],
Cell[273439, 5491, 305, 8, 30, "Output",ExpressionUUID->"f14a634e-1bf9-4efe-82f5-3662b47d3ed3"],
Cell[273747, 5501, 307, 9, 30, "Output",ExpressionUUID->"48ba4a35-065c-4d45-9f57-9ce709599740"],
Cell[274057, 5512, 281, 8, 30, "Output",ExpressionUUID->"3ed02920-c77f-450b-9461-7c78fdb3ea9a"],
Cell[274341, 5522, 297, 9, 30, "Output",ExpressionUUID->"bbed9932-aff4-44b8-a0d6-c1b41ef77d9a"],
Cell[274641, 5533, 287, 8, 47, "Output",ExpressionUUID->"a4414528-6d60-4d67-b3a1-a9605758b8ac"],
Cell[274931, 5543, 36465, 701, 240, "Output",ExpressionUUID->"751b3082-4a0d-4a67-8eb6-b16ac897ebd8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

